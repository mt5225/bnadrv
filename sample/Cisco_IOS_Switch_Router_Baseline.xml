<?xml version="1.0" encoding="UTF-8"?>
<deviceTypeMap>
    <!-- ================================================================== -->
    <deviceType>
        <id>0</id>
        <guid>BE2B2D21-1CAA-53C3-05C3-CBB0A5D151B8</guid>
        <name>Cisco IOS Switch/Router</name>
        <vendor>F7B056F7-7C64-0990-3A79-124DAF33F2D1</vendor>
        <imageNamePrefix>IOS</imageNamePrefix>
        <alwaysUseDiff>false</alwaysUseDiff>
        <ignoreBlanks>false</ignoreBlanks>
        <defaultMergeCommandGuid>5421B3AE-2C94-0519-5D07-B4971BB15C7D</defaultMergeCommandGuid>
        <defaultRestoreCommandGuid>61A43CB3-2D57-66F7-32E3-59A1A1CD291E</defaultRestoreCommandGuid>
        <supportsSsh1Access>true</supportsSsh1Access>
        <supportsSsh2Access>true</supportsSsh2Access>
        <supportsTunneledTransfer>true</supportsTunneledTransfer>
        <supportsFtpTransfer>true</supportsFtpTransfer>
        <supportsScpTransfer>true</supportsScpTransfer>
        <supportsPrivPassword>true</supportsPrivPassword>
        <securitySleepSeconds>20</securitySleepSeconds>
        <!-- 2500 model may need security sleep setting after image load -->
        <promptsUnsavedChanges>true</promptsUnsavedChanges>
        <supportsDiskImageLoad>true</supportsDiskImageLoad>
        <supportsForwardImageDeletion>true</supportsForwardImageDeletion>
        <supportsPCMCIAFlashCardImageLoad>true</supportsPCMCIAFlashCardImageLoad>
        <supportsSerialTerminalServerManagement>true</supportsSerialTerminalServerManagement>
        <imageArchiveFilename>^(.+\.tar|.+/.+).*</imageArchiveFilename>
        <!-- IOS archive (tar) files end in .tar or have an embedded slash -->
        <imageLoaderClassName>
          com.bmc.bcan.engine.network.devices.IOSImageLoader
        </imageLoaderClassName>
        <hardwareInventoryClassName>
            com.bmc.bcan.engine.network.devices.IOSHardwareInventory
        </hardwareInventoryClassName>
        <snmpOids>
            <snmpOid category="1">1.3.6.1.4.1.9.1.6</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.7</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.8</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.12</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.13</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.14</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.17</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.18</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.19</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.20</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.21</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.22</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.23</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.24</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.25</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.26</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.27</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.28</snmpOid>
            <!-- access server -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.29</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.30</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.31</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.40</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.41</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.42</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.43</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.44</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.45</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.46</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.47</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.48</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.49</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.50</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.55</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.56</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.57</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.58</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.59</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.60</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.61</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.62</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.63</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.64</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.65</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.67</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.68</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.69</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.70</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.71</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.72</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.73</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.74</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.75</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.104</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.105</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.106</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.107</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.108</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.109</snmpOid>
            <!-- access server -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.110</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.111</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.112</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.113</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.114</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.115</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.116</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.117</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.118</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.119</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.120</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.122</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.123</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.124</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.125</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.130</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.131</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.132</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.133</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.134</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.135</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.136</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.137</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.138</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.139</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.140</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.141</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.142</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.153</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.154</snmpOid>
            <!-- access server -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.157</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.162</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.165</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.166</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.167</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.170</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.171</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.172</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.173</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.179</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.182</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.183</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.184</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.185</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.186</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.187</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.188</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.189</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.190</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.191</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.194</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.195</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.196</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.199</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.200</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.201</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.202</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.203</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.204</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.205</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.206</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.208</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.209</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.210</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.211</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.212</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.213</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.214</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.215</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.216</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.217</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.218</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.219</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.220</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.221</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.222</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.223</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.230</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.231</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.245</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.246</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.247</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.248</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.249</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.250</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.253</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.255</snmpOid>
            <!-- broadband router -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.257</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.258</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.259</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.260</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.261</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.262</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.263</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.264</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.266</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.267</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.268</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.269</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.270</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.271</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.273</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.274</snmpOid>
            <!-- access server -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.275</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.276</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.277</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.278</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.279</snmpOid>
            <!-- voice gateway -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.282</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.283</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.284</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.286</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.287</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.288</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.289</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.290</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.291</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.292</snmpOid>
            <!-- broadband router obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.293</snmpOid>
            <!-- broadband router obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.294</snmpOid>
            <!-- broadband router obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.295</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.296</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.297</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.298</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.299</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.300</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.301</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.308</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.310</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.312</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.313</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.316</snmpOid>
            <!-- broadband router obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.317</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.318</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.319</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.320</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.321</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.322</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.323</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.324</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.325</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.326</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.338</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.339</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.340</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.341</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.342</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.343</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.344</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.345</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.346</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.347</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.348</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.351</snmpOid>
            <!-- broadband router -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.353</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.354</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.359</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.362</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.366</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.367</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.368</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.369</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.370</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.379</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.380</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.382</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.383</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.384</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.385</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.388</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.394</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.395</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.396</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.397</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.398</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.399</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.400</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.401</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.402</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.403</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.406</snmpOid>
            <!-- optical platform -->
            <snmpOid category="5">1.3.6.1.4.1.9.1.412</snmpOid>
            <!-- content engine -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.413</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.414</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.416</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.418</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.419</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.423</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.425</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.427</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.428</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.429</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.430</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.431</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.436</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.437</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.438</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.439</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.440</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.444</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.446</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.447</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.448</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.449</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.452</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.453</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.457</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.461</snmpOid>
            <!-- optical platform -->
            <snmpOid category="98">1.3.6.1.4.1.9.1.462</snmpOid>
            <!-- optical platform -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.463</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.464</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.466</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.467</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.468</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.469</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.470</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.471</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.472</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.474</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.476</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.477</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.478</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.479</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.480</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.481</snmpOid>
            <!-- optical platform -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.482</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.483</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.484</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.485</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.488</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.489</snmpOid>
            <snmpOid category="5">1.3.6.1.4.1.9.1.492</snmpOid>
            <!-- content engine -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.495</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.496</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.497</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.498</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.499</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.500</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.501</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.502</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.503</snmpOid>
            <snmpOid category="5">1.3.6.1.4.1.9.1.504</snmpOid>
            <!-- content engine -->
            <snmpOid category="9">1.3.6.1.4.1.9.1.507</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.508</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.509</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.511</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.512</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.513</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.514</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.516</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.520</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.525</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.527</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.528</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.530</snmpOid>
            <!-- obsolete -->
            <snmpOid category="9">1.3.6.1.4.1.9.1.533</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.534</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.537</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.538</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.539</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.540</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.542</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.543</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.544</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.545</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.546</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.547</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.548</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.549</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.550</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.551</snmpOid>
            <!-- obsolete -->
            <snmpOid category="9">1.3.6.1.4.1.9.1.552</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.553</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.557</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.558</snmpOid>
            <!-- voice gateway -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.559</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.560</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.561</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.563</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.564</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.565</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.566</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.567</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.568</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.569</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.570</snmpOid>
            <!-- obsolete -->
            <snmpOid category="1">1.3.6.1.4.1.9.1.571</snmpOid>
            <!-- obsolete -->
            <snmpOid category="98">1.3.6.1.4.1.9.1.573</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.574</snmpOid>
            <snmpOid category="99">1.3.6.1.4.1.9.1.575</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.576</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.577</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.578</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.581</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.591</snmpOid>
            <!-- obsolete -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.592</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.614</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.615</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.616</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.617</snmpOid>
            <snmpOid category="9">1.3.6.1.4.1.9.1.618</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.619</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.620</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.626</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.627</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.628</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.629</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.633</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.634</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.638</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.639</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.640</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.641</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.642</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.657</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.658</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.659</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.660</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.666</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.668</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="98">1.3.6.1.4.1.9.1.679</snmpOid>
            <!-- universal gateway -->
            <snmpOid category="9">1.3.6.1.4.1.9.1.685</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.688</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.690</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.694</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.695</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.696</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.697</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.702</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.716</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.717</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.719</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.720</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.732</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.734</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.736</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.737</snmpOid>
            <snmpOid category="1">1.3.6.1.4.1.9.1.744</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.748</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.749</snmpOid>
            <snmpOid category="98">1.3.6.1.4.1.9.1.772</snmpOid>
            <!-- optical platform -->
            <snmpOid category="2">1.3.6.1.4.1.9.1.780</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.781</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.784</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.788</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.789</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.790</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.791</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.792</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.793</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.794</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.795</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.796</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.797</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.798</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.799</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.862</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.863</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.864</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.874</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.875</snmpOid>
            <snmpOid category="2">1.3.6.1.4.1.9.1.1000</snmpOid>
            <!-- From CISCO-PRODUCTS-MIB.my, from names and comments -->
            <!-- Routers: SOHO7x, 8xx, UBR9xx, 14xx, 16xx/16xxR, 17xx,
                          25xx, 26xx, 36xx, 37xx, 70xx, UBR72xx, 10xx,
                          40xx, 75xx, 30xx, 72xx -->
            <!-- Switches: Cat29xx, Cat35xx, Cat37xx, Cat45xx, 4224, Cat40xx,
                           Cat5000, Cat6kMsfc2 -->
            <!-- Note: The Cat29xx, Cat35xx, and Cat37xx I believe are all IOS
                 models that use archive style image loading (and might support
                 switch stacking). -->
            <!-- Per bug #3686: many OIDs gleaned from list of RME devices.
                 See bug for instructions and link to Cisco docs. -->
        </snmpOids>
        <supportedConfigurationTrailDeclarations>
            <supportedTrail>
                <guid>02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF</guid>
                <format>ascii</format>
                <backupCommandGuid>388DFC1D-2DF0-D833-5762-F5121A797069</backupCommandGuid>
                <mergeCommandGuid>5421B3AE-2C94-0519-5D07-B4971BB15C7D</mergeCommandGuid>
            </supportedTrail>
            <supportedTrail>
                <guid>1D168B48-15CC-416E-AB4A-88E2E7104E2D</guid>
                <format>ascii</format>
                <backupCommandGuid>4E005EF8-BAC1-BD15-EF63-DDC6D2547FFE</backupCommandGuid>
                <restoreCommandGuid>61A43CB3-2D57-66F7-32E3-59A1A1CD291E</restoreCommandGuid>
            </supportedTrail>
            <supportedTrail>
                <!-- device will have a vlan.dat file when running in VTP
                server mode or VTP transparent mode; no vlan.dat when running
                in VTP client mode; the file and is stored in NVRAM for
                modular switches or in Flash for fixed configuration switches.
                -->
                <!-- vlan.dat -->
                <guid>294DA341-E2E1-43CE-9E2E-54634CCC228D</guid>
                <format>binary</format>
                <capturesDecoded>true</capturesDecoded>
                <backupCommandGuid>495C7D1D-12B7-47DB-82AF-56DE6B2EA0E3</backupCommandGuid>
                <restoreCommandGuid>5F6955F9-4D1C-4DF3-824F-2623EC6D746F</restoreCommandGuid>
            </supportedTrail>
            <supportedTrail>
                <!-- ARP table -->
                <guid>67868622-37E9-40B6-AA10-E43E5037ABE8</guid>
                <format>ascii</format>
                <backupCommandGuid>5286E187-BF02-4B70-B206-8E2CFB9056CB</backupCommandGuid>
            </supportedTrail>
            <supportedTrail>
                <!-- MAC table -->
                <guid>BF839166-E9C9-42C2-8397-0FFD6362BCFC</guid>
                <format>ascii</format>
                <backupCommandGuid>14DD0149-C5C1-4E25-A770-E4B35C10A2B9</backupCommandGuid>
            </supportedTrail>
        </supportedConfigurationTrailDeclarations>
        <commentLines>
            <!-- all of these are case-INsensitive -->
            <line>^\s*#</line>
            <line>^\s*!</line>
            <!-- sometimes the comment line is indented, so allow for
                     leading whitespace -->
            <line context="compliancy">^\s*description .*</line>
            <!-- helps avoid compliancy violations inside blocks -->
            <line context="discrepancy">^no scheduler allocate</line>
            <!-- A note about "no scheduler allocate". This appears in the
                 Running config but not the Startup config whenever a device
                 has not had the "scheduler allocate" set to something
                 besides "no" since the OS was installed. Which is likely
                 all the time, since Cisco docs warn users against messing
                 with "scheduler allocate". This would normally trigger BBNA
                 to show a Running/Startup Discrepancy all the time, so here
                 we designate it to be ignored. Were the scheduler ever to
                 be changed, then BBNA would pick up its setting as a change,
                 but its clearing to "no" would not be highlighted next to
                 its setting. -->
            <line context="discrepancy">^ntp clock-period</line>
            <line context="discrepancy" scope="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF,1D168B48-15CC-416E-AB4A-88E2E7104E2D">^\s*certificate \S+</line>
            <!-- certificate lines in startup config will show a filename,
                     while in the running they will be followed by the file's
                     contents in a block, ending with a quit line. -->
            <line context="discrepancy" scope="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF,1D168B48-15CC-416E-AB4A-88E2E7104E2D">^\s*Uncompressed\s+configuration\s+from\s+.*</line>
            <!-- this line will appear in the startup but not the running
                     when the startup is stored in a compressed format.
                -->
            <line context="discrepancy">^[B|b]uilding configuration</line>
            <line context="discrepancy">^[C|c]urrent configuration</line>
            <line context="discrepancy">^[U|u]sing \d+ out of \d+ bytes</line>
            <!-- <line context="discrepancy"
                  scope="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF,1D168B48-15CC-416E-AB4A-88E2E7104E2D">logging console</line> -->
            <!-- Above four lines come when screen scrapping is done to
                 capture configurations (for terminal servers), since we
                 have to disable syslogging to do screen scrapping the fourth
                 line is added for ignoring the syslog command discrepancy.
                 The "logging console" line is COMMENTED OUT by default, since
                 no customers are running terminal servers. If someone does,
                 then we can give them a custom DTM with the line uncommented
                 (see bug #3728 for a discussion). -->
        </commentLines>
        <commentBlocks>
            <!-- all of these are case-INsensitive -->
            <block context="discrepancy" scope="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF,1D168B48-15CC-416E-AB4A-88E2E7104E2D">
                <begin inclusive="true">^\s*certificate \S+</begin>
                <end inclusive="true">^\s*quit$</end>
                <!-- certificate lines in startup config will show a filename,
                     while in the running they will be followed by the file's
                     contents in a block, ending with a quit line. -->
            </block>
        </commentBlocks>
        <disregardLeadingWord>
            <word>no</word>
        </disregardLeadingWord>
        <sortedCommands>
            <line trails="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF, 1D168B48-15CC-416E-AB4A-88E2E7104E2D">^ip host .*</line>
            <line trails="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF, 1D168B48-15CC-416E-AB4A-88E2E7104E2D">^dlsw remote-peer .*</line>
            <line trails="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF, 1D168B48-15CC-416E-AB4A-88E2E7104E2D">^logging \d+\.\d+\.\d+\.\d+</line>
        </sortedCommands>
        <configProcessors>
            <textProcessor outgoing="true" replace="/" search="\x003" tunneledTransfer="true"/>
            <!-- replace CTRL-C with / for outbound tunneled transfer -->
            <textProcessor incoming="true" replace="\x003" search="\^C"
                trails="02C89A1F-A5D2-44B0-AE1E-B714EB0E3FAF, 1D168B48-15CC-416E-AB4A-88E2E7104E2D" tunneledTransfer="true"/>
            <!-- replace ^C with CTRL-C for inbound tunneled transfer; hard
                 to limit this just to cmds like "banner motd ^C...^C", since
                 the user could stick his own ^C in anywhere free text is
                 allowed (like banner text or interface descriptions). Not
                 likely user would do this, but it is possible. -->
        </configProcessors>
        <sensitiveLines>
            <line>^\s*aaa configuration route username \S+ password \d (\S+)\s*$</line>
            <line>^\s*aaa configuration route username \S+ password (\S+)\s*$</line>
            <line>^\s*ctype .* password (\S+) .*</line>
            <line>^\s*ctype .* password (\S+)\s*$</line>
            <line>^\s*ctype password (\S+) .*</line>
            <line>^\s*ctype password (\S+)\s*$</line>
            <line>^\s*database archive \S+ password (\S+)\s*$</line>
            <line>^\s*database url .* password (\S+)\s*$</line>
            <line>^\s*database url .* password \d (\S+)\s*$</line>
            <line>^\s*database username \S+ password (\S+)\s*$</line>
            <line>^\s*database username \S+ password \d (\S+)\s*$</line>
            <line>^\s*dialer aaa password (\S+)\s*$</line>
            <line>^\s*dnis .* password (\S+)\s*$</line>
            <line>^\s*dnis password (\S+)\s*$</line>
            <line>^\s*eap password (\S+)\s*$</line>
            <line>^\s*enable secret level \d (\S+)\s*$</line>
            <line>^\s*enable secret level \d \d (\S+)\s*$</line>
            <line>^\s*enable secret (\S+)\s*$</line>
            <line>^\s*enable secret \d (\S+)\s*$</line>
            <line>^\s*enable password level \d (\S+)\s*$</line>
            <line>^\s*enable password level \d \d (\S+)\s*$</line>
            <line>^\s*enable password (\S+)\s*$</line>
            <line>^\s*enable password \d (\S+)\s*$</line>
            <line>^\s*eou clientless password (\S+)\s*$</line>
            <line>^\s*li-view \S+ user \S+ password (\S+)\s*$</line>
            <line>^\s*password (\S+)\s*$</line>
            <line>^\s*password \d (\S+)\s*$</line>
            <line>^\s*password\d (\S+)\s*$</line>
            <line>^\s*ppp eap password (\S+)\s*$</line>
            <line>^\s*ppp chap password \d (\S+)\s*$</line>
            <line>^\s*ppp eap password \d (\S+)\s*$</line>
            <line>^\s*ppp pap sent username \S+ password \d (\S+)\s*$</line>
            <line>^\s*radius-server key (\S+)\s*$</line>
            <line>^\s*radius-server key \d (\S+)\s*$</line>
            <line>^\s*set aggressive-mode password (\S+)\s*$</line>
            <line>^\s*snmp-server community (\S+).*</line>
            <line>^\s*tacacs-server key (\S+)\s*$</line>
            <line>^\s*tacacs-server key \d (\S+)\s*$</line>
            <line>^\s*template username \S+ password (\S+)\s*$</line>
            <line>^\s*user \S+ password (\S+)\s*$</line>
            <line>^\s*user \S+ password (\S+) group \S+\s*$</line>
            <line>^\s*username \S+ .*password \d (\S+)\s*$</line>
            <line>^\s*username \S+ .*password (\S+)\s*$</line>
            <line>^\s*use   rname \S+ secret \d (\S+)\s*$</line>
            <line>^\s*username \S+ secret (\S+)\s*$</line>
            <line>^\s*no aaa configuration route username \S+ password \d (\S+)\s*$</line>
            <line>^\s*no aaa configuration route username \S+ password (\S+)\s*$</line>
            <line>^\s*no ctype .* password (\S+) .*</line>
            <line>^\s*no ctype .* password (\S+)\s*$</line>
            <line>^\s*no ctype password (\S+) .*</line>
            <line>^\s*no ctype password (\S+)\s*$</line>
            <line>^\s*no database archive \S+ password (\S+)\s*$</line>
            <line>^\s*no database url .* password (\S+)\s*$</line>
            <line>^\s*no database url .* password \d (\S+)\s*$</line>
            <line>^\s*no database username \S+ password (\S+)\s*$</line>
            <line>^\s*no database username \S+ password \d (\S+)\s*$</line>
            <line>^\s*no dialer aaa password (\S+)\s*$</line>
            <line>^\s*no dnis password (\S+)\s*$</line>
            <line>^\s*no dnis .* password (\S+)\s*$</line>
            <line>^\s*no eap password (\S+)\s*$</line>
            <line>^\s*no enable secret level \d (\S+)\s*$</line>
            <line>^\s*no enable secret level \d \d (\S+)\s*$</line>
            <line>^\s*no enable secret (\S+)\s*$</line>
            <line>^\s*no enable secret \d (\S+)\s*$</line>
            <line>^\s*no enable password \d (\S+)\s*$</line>
            <line>^\s*no enable password level \d (\S+)\s*$</line>
            <line>^\s*no enable password level \d \d (\S+)\s*$</line>
            <line>^\s*no enable password (\S+)\s*$</line>
            <line>^\s*no li-view \S+ user \S+ password (\S+)\s*$</line>
            <line>^\s*no password (\S+)\s*$</line>
            <line>^\s*no password \d (\S+)\s*$</line>
            <line>^\s*no password\d (\S+)\s*$</line>
            <line>^\s*no ppp eap password (\S+)\s*$</line>
            <line>^\s*no ppp eap password \d (\S+)\s*$</line>
            <line>^\s*no ppp chap password \d (\S+)\s*$</line>
            <line>^\s*no ppp pap sent username \S+ password \d (\S+)\s*$</line>
            <line>^\s*no set aggressive-mode password (\S+)\s*$</line>
            <line>^\s*no snmp-server community (\S+).*</line>
            <line>^\s*no template username \S+ password (\S+)\s*$</line>
            <line>^\s*no user \S+ password (\S+)\s*$</line>
            <line>^\s*no user \S+ password (\S+) group \S+\s*$</line>
            <line>^\s*no username \S+ .*password \d (\S+)\s*$</line>
            <line>^\s*no username \S+ .*password (\S+)\s*$</line>
            <line>^\s*no username \S+ secret \d (\S+)\s*$</line>
            <line>^\s*no username \S+ secret (\S+)\s*$</line>
        </sensitiveLines>
        <deviceCommand>
            <!-- login -->
            <guid>0E8DB22F-DEF8-987E-1AFB-7BE8BBCC9BEA</guid>
            <condition test="-EXISTS- managedBySerial">
                <condition test="-NOT- (-EXISTS- terminalServerDeviceRelogin)">
                    <interaction optional="true" regex="true">
                        <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                        <command>%username%</command>
                        <response>[Pp]assword</response>
                        <error retry="true">([Uu]ser.*:|[Ll]ogin.*:)</error>
                    </interaction>
                    <interaction optional="true" regex="true">
                        <prompt>[Pp]assword</prompt>
                        <command sensitive="true">%password%</command>
                        <pauseSeconds>1</pauseSeconds>
                        <error retry="true">Authentication failed</error>
                        <error retry="true">Authorization failed</error>
                        <error retry="true">Rejected</error>
                        <error retry="true">Error in authentication</error>
                        <error retry="true">Access denied</error>
                    </interaction>
                    <interaction optional="true" regex="true">
                        <!-- exit any menu that might be presented; we assume
                             that X will get us out of this menu. -->
                        <prompt>X\s+Exec Prompt</prompt>
                        <command>X</command>
                        <response property="cmd.needsEnablePrompt">&gt;</response>
                        <response>#</response>
                    </interaction>
                    <interaction regex="true">
                        <prompt>(&gt;|#)</prompt>
                        <command/>
                        <response property="cmd.needsEnablePrompt">&gt;</response>
                        <response>#</response>
                    </interaction>
                </condition>
                <!-- For login via serial terminal servers, we could get
                     username/password, enable prompt or privileged prompt
                     (depending on if the previous user exited properly or
                     not). We allow logins in all cases and execute the
                     exit command during logout so in the next login proper
                     username/password prompts are shown. Since you
                     could start getting syslog messages on the console, even
                     before seeing the first prompt the .+ match on prompts
                     is risky, so '>' or '#' are used for prompt matching.
                     The login command may error out if the prompts are
                     defined not to have '>' and '#'. -->
                <condition test="-EXISTS- terminalServerDeviceRelogin">
                    <interaction optional="true" regex="true">
                        <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                        <command>%username%</command>
                        <response>[Pp]assword</response>
                        <error retry="true">([Uu]ser.*:|[Ll]ogin.*:)</error>
                    </interaction>
                    <interaction regex="true">
                        <prompt>[Pp]assword</prompt>
                        <command sensitive="true">%password%</command>
                        <pauseSeconds>1</pauseSeconds>
                        <error retry="true">Authentication failed</error>
                        <error retry="true">Authorization failed</error>
                        <error retry="true">Rejected</error>
                        <error retry="true">Error in authentication</error>
                        <error retry="true">Access denied</error>
                    </interaction>
                    <interaction regex="true">
                        <prompt>(&gt;|#)</prompt>
                        <command/>
                        <response property="cmd.needsEnablePrompt">&gt;</response>
                        <response>#</response>
                    </interaction>
                </condition>
                <!-- For relogins after reboot there is no need of looking
                     for the '>' or '#' because the user would always be in a
                     logged out state, only look for username/password
                     prompts -->
                <condition test="-EXISTS- cmd.needsEnablePrompt">
                    <interaction regex="true">
                        <command>enable</command>
                        <response property="cmd.needsPrivUsername">([Uu]ser.*:|[Ll]ogin.*:)</response>
                        <response property="cmd.needsPrivPassword">[Pp]assword</response>
                        <response>\Q%prompt%\E</response>
                        <!-- when already enabled -->
                    </interaction>
                    <condition test="-EXISTS- cmd.needsPrivUsername">
                        <interaction regex="true">
                            <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                            <command>%privUsername%</command>
                            <response property="cmd.needsPrivPassword">[Pp]assword</response>
                        </interaction>
                    </condition>
                    <condition test="-EXISTS- cmd.needsPrivPassword">
                        <interaction regex="true">
                            <prompt>[Pp]assword</prompt>
                            <command sensitive="true">%privPassword%</command>
                            <pauseSeconds>1</pauseSeconds>
                            <response>#</response>
                            <error retry="true">Access denied</error>
                            <error retry="true">Authentication failed</error>
                            <error retry="true">Authorization failed</error>
                            <error retry="true">Rejected</error>
                            <error retry="true">Error in authentication</error>
                            <error retry="true">Bad password</error>
                            <!-- retry, in case AAA server is unable to handle
                                 our request at this instant. -->
                        </interaction>
                    </condition>
                </condition>
                <interaction>
                    <prompt>#</prompt>
                    <command>terminal length 0</command>
                    <response>#</response>
                </interaction>
                <interaction>
                    <prompt>#</prompt>
                    <command>show logging | inc Console</command>
                    <response>#</response>
                    <capture buffer="Console logging: level (\w+)" ignoreFailure="true">
                        <property name="consoleLoggingLevel">{1}</property>
                    </capture>
                </interaction>
                <condition test="-EXISTS- consoleLoggingLevel">
                    <interaction>
                        <prompt>#</prompt>
                        <command>configure terminal</command>
                        <response>#</response>
                    </interaction>
                    <interaction>
                        <prompt>#</prompt>
                        <command>no logging console</command>
                        <response>#</response>
                    </interaction>
                    <interaction>
                        <prompt>#</prompt>
                        <command>exit</command>
                        <response>#</response>
                    </interaction>
                </condition>
                <!-- For serial terminal servers syslog messages need to be
                     disabled as these could be visible on the configs got from
                     screen scrapping. Make sure to enable the same level of
                     console syslogging before logout. -->
            </condition>
            <condition test="-NOT- (-EXISTS- managedBySerial)">
                <condition test="%accessMode% -EQ- telnet">
                    <interaction optional="true" regex="true">
                        <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                        <command>%username%</command>
                        <response>[Pp]assword</response>
                        <error retry="true">([Uu]ser.*:|[Ll]ogin.*:)</error>
                    </interaction>
                    <interaction optional="true" regex="true">
                        <prompt>[Pp]assword</prompt>
                        <command sensitive="true">%password%</command>
                        <pauseSeconds>1</pauseSeconds>
                        <error retry="true">Authentication failed</error>
                        <error retry="true">Authorization failed</error>
                        <error retry="true">Rejected</error>
                        <error retry="true">Error in authentication</error>
                        <error retry="true">Access denied</error>
                    </interaction>
                    <condition test="(%username% -EQ- %empty%) -AND- (%password% -EQ- %empty%)">
                        <interaction regex="true">
                            <prompt jitterMilliSeconds="3000">.+</prompt>
                            <command/>
                        </interaction>
                    </condition>
                    <!-- Wrap the .+ prompt in conditional so that it is used
                         only if both username and password prompt are empty.
                         See bug 2246. -->
                </condition>
                <interaction optional="true" regex="true">
                    <!-- exit any menu that might be presented; we assume
                         that X will get us out of this menu. We will assume
                         also that the option to get to the CLI starts with
                         "Exec Prompt". -->
                    <prompt>X\s+Exec Prompt</prompt>
                    <command>X</command>
                    <pauseSeconds>3</pauseSeconds>
                    <response>.+</response>
                </interaction>
                <interaction regex="true">
                    <prompt>.+</prompt>
                    <command/>
                    <pauseSeconds>3</pauseSeconds>
                    <response>.+</response>
                </interaction>
                <interaction>
                    <command/>
                    <pauseSeconds>2</pauseSeconds>
                    <capture>
                        <property name="prompt"/>
                    </capture>
                </interaction>
                <condition test="(-NOT- (-EXISTS- terminalLogin)) -OR- (-EXISTS- terminalPrivLogin)">
                    <!-- SSH Proxy DSP -->
                    <interaction regex="true">
                        <command>enable</command>
                        <response property="cmd.needsPrivUsername">([Uu]ser.*:|[Ll]ogin.*:)</response>
                        <response property="cmd.needsPrivPassword">[Pp]assword</response>
                        <response>\Q%prompt%\E</response>
                        <!-- when already enabled -->
                    </interaction>
                    <condition test="-EXISTS- cmd.needsPrivUsername">
                        <interaction regex="true">
                            <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                            <command>%privUsername%</command>
                            <response property="cmd.needsPrivPassword">[Pp]assword</response>
                        </interaction>
                    </condition>
                    <condition test="-EXISTS- cmd.needsPrivPassword">
                        <interaction regex="true">
                            <prompt>[Pp]assword</prompt>
                            <command sensitive="true">%privPassword%</command>
                            <pauseSeconds>1</pauseSeconds>
                            <response>.+</response>
                            <error retry="true">Access denied</error>
                            <error retry="true">Authentication failed</error>
                            <error retry="true">Authorization failed</error>
                            <error retry="true">Rejected</error>
                            <error retry="true">Error in authentication</error>
                            <error retry="true">Bad password</error>
                            <!-- retry, in case AAA server is unable to handle
                            our request at this instant. -->
                        </interaction>
                    </condition>
                </condition>
            </condition>
            <condition test="-NOT- (-EXISTS- terminalLogin)">
                <interaction regex="true">
                    <command>terminal no monitor</command>
                    <pauseSeconds>3</pauseSeconds>
                    <response>.+</response>
                </interaction>
                <interaction>
                    <command/>
                    <pauseSeconds>2</pauseSeconds>
                    <capture>
                        <property name="prompt"/>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>terminal length 0</command>
                    <response>%prompt%</response>
                </interaction>
            </condition>
            <!-- Pause+disable to clear syslog msgs before prompt capture. -->
            <!-- Monitor/length changes only affect our session, not RC. -->
            <!-- IOS prompt can be totally user defined so we must capture. -->
            <!-- Junk chars can sometimes pollute initial login, so retry. -->
        </deviceCommand>
        <deviceCommand>
            <!-- discover core -->
            <guid>1E91FAD6-FBB7-5D7C-120F-ABD77583A086</guid>
            <interaction>
                <prompt>%prompt%</prompt>
                <command>show version</command>
                <response>%prompt%</response>
                <capture
                    buffer=".*IOS .*Software.* Version (\d+)\.(\d+)\((\d+).*" ignoreFailure="true">
                    <property name="disc.versionMajor">{1}</property>
                    <property name="disc.versionMinor">{2}</property>
                    <property name="disc.versionBuild">{3}</property>
                    <!-- build is stuff inside the first set of parens,
                             allowing for multiple sets (3317) and for
                             grabbing only numbers (3602) -->
                    <property name="disc.version">{1}.{2}.{3}</property>
                    <property name="disc.versionShort">{1}.{2}</property>
                </capture>
                <capture
                    buffer="IOS .*Software \((\S+)\), Version (\S+)," ignoreFailure="true">
                    <!-- version string ends with comma -->
                    <property name="disc.imageName">{2}, {1}</property>
                </capture>
                <capture
                    buffer="IOS .*Software \((\S+)\), Version ([^, ]+)\s+RELEASE" ignoreFailure="true">
                    <!-- version string goes to RELEASE SOFTWARE, no comma -->
                    <property name="disc.imageName">{2}, {1}</property>
                </capture>
                <capture
                    buffer="IOS .*Software \((\S+)\), Experimental Version (\S+)" ignoreFailure="true">
                    <!-- experimental version string ends with blank -->
                    <property name="disc.imageName">{2}, {1}</property>
                </capture>
                <capture
                    buffer="[Cc][Ii][Ss][Cc][Oo] (\S*) .* bytes of memory" ignoreFailure="true">
                    <property name="cmd.modelShort">{1}</property>
                </capture>
                <capture buffer="Model number\s*:\s+(\S+)" ignoreFailure="true">
                    <property name="cmd.modelLong">{1}</property>
                </capture>
                <capture buffer="System image file is &quot;([\w-]+):" ignoreFailure="true">
                    <property name="disc.imageFilesystem">{1}</property>
                </capture>
                <capture
                    buffer="System image file is &quot;([\w-]+):/?(\S+)&quot;" ignoreFailure="true">
                    <property name="disc.imageFilename">{2}</property>
                </capture>
                <capture
                    buffer="System image file is &quot;([^:]+)&quot;, booted via (\S+)" ignoreFailure="true">
                    <property name="disc.imageFilename">{1}</property>
                    <property name="disc.imageFilesystem">{2}</property>
                </capture>
                <capture
                    buffer="System image file is &quot;([^:]+)&quot;, booted via (\S+):" ignoreFailure="true">
                    <!-- egad. there may or may not be a colon on the filesystem
                         in the above string; need to ensure our imageFilesystem
                         property has NO colon. only way to do this is to parse
                         it twice, with the colon one last. -->
                    <property name="disc.imageFilename">{1}</property>
                    <property name="disc.imageFilesystem">{2}</property>
                </capture>
                <!-- image filesystem could have a '-' in its name like
                     'flash' or 'sup-bootflash', the [\w-] takes care of it -->
                <capture
                    buffer="MSFC\S*\s+Software[\x00-\xff]+System image file is &quot;sup-([\w-]+):" ignoreFailure="true">
                    <!-- sup-bootflash: and sup-slotN: are how an MSFC sees
                         the hybrid mode supervisor engine's file systems. -->
                    <property name="disc.imageFilesystemOnMsfcSupervisorEngine">{1}</property>
                </capture>
                <capture buffer="MSFC\S*\s+Software" ignoreFailure="true">
                    <!-- some MSFC's do not report their system image name
                         above; remember it's an MSFC for "show boot"
                         coming up below. Model was Cat6k-MSFC2 running
                         "12.1(8b)E8, C6MSFC2-JSV-M". -->
                    <property name="cmd.deviceIsMsfc">yes</property>
                </capture>
                <capture buffer="with (\d+)(.)/(\d+)(.) bytes of memory" ignoreFailure="true">
                    <property name="disc.memoryFreeSize">{1}</property>
                    <property name="disc.memoryFreeSizeUnits">{2}</property>
                    <property name="disc.memoryUsedSize">{3}</property>
                    <property name="disc.memoryUsedSizeUnits">{4}</property>
                </capture>
            </interaction>
            <!-- cmd.modelLong might have a fuller model specification; use it
                 for the model when it's available. -->
            <condition test="(-EXISTS- cmd.modelLong)">
                <assign property="disc.model" value="%cmd.modelLong%"/>
            </condition>
            <condition test="(-NOT- (-EXISTS- cmd.modelLong)) -AND- (-EXISTS- cmd.modelShort)">
                <assign property="disc.model" value="%cmd.modelShort%"/>
            </condition>
            <condition test="(-NOT- (-EXISTS- disc.imageFilename)) -AND- (-NOT- (-EXISTS- disc.imageFilesystem))">
                <interaction>
                    <!-- on some old devices, "show boot" works, on other
                         newer devices, it's "show bootvar" which conveniently
                         abbreviates to "show boot". On some MSFC2 devices
                         (12.1(8b)E8, C6MSFC2-JSV-M), "show version" reported
                         no system image info. -->
                    <prompt>%prompt%</prompt>
                    <command>show boot</command>
                    <response property="cmd.showBootAmbiguous">Ambiguous command:</response>
                    <response>%prompt%</response>
                    <capture
                        buffer="BOOT\s+variable\s+=\s+([^:]+):([^,]+),\d+" ignoreFailure="true">
                        <property name="disc.imageFilesystem">{1}</property>
                        <property name="disc.imageFilename">{2}</property>
                    </capture>
                    <capture
                        buffer="BOOT variable\s+=\s+sup-([\w-]+):\S+,\d+" ignoreFailure="true">
                        <property name="cmd.imageFilesystemOnMsfcSupervisorEngine">{1}</property>
                    </capture>
                </interaction>
                <condition test="-EXISTS- cmd.showBootAmbiguous">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show bootvar</command>
                        <response>%prompt%</response>
                        <capture
                            buffer="BOOT\s+variable\s+=\s+([^:]+):([^,]+),\d+" ignoreFailure="true">
                            <property name="disc.imageFilesystem">{1}</property>
                            <property name="disc.imageFilename">{2}</property>
                        </capture>
                        <capture
                            buffer="BOOT variable\s+=\s+sup-([\w-]+):\S+,\d+" ignoreFailure="true">
                            <property name="cmd.imageFilesystemOnMsfcSupervisorEngine">{1}</property>
                        </capture>
                    </interaction>
                </condition>
                <condition test="(-EXISTS- cmd.deviceIsMsfc) -AND- (-EXISTS- cmd.imageFilesystemOnMsfcSupervisorEngine)">
                    <!-- if "show version" says it's an MSFC, need to also set
                         the flag for image being on the supervisor engine -->
                    <assign
                        property="disc.imageFilesystemOnMsfcSupervisorEngine" value="%cmd.imageFilesystemOnMsfcSupervisorEngine%"/>
                </condition>
            </condition>
            <condition test="(-NOT- (-EXISTS- disc.imageFilename)) -AND- (-EXISTS- disc.imageFilesystem)">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show %disc.imageFilesystem%:</command>
                    <response>%prompt%</response>
                    <capture buffer="1.+image.+\s(\S+)$" ignoreFailure="true">
                        <property name="disc.imageFilename">{1}</property>
                    </capture>
                </interaction>
            </condition>
            <condition test="%discoverTransferMode% -EQ- true">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy ?</command>
                    <pauseSeconds>2</pauseSeconds>
                    <!-- pause to allow possibly big chunk of help
                             text to be fully transferred -->
                    <response>%prompt%</response>
                    <capture buffer="scp" ignoreFailure="true">
                        <property name="disc.supportsScp">true</property>
                    </capture>
                    <capture buffer="ftp(?&lt;!tftp)" ignoreFailure="true">
                        <property name="disc.supportsFtp">true</property>
                    </capture>
                    <!-- match ftp only, don't match tftp -->
                </interaction>
            </condition>
            <!-- discover the transfer mode of the device, since the device
                 prints the command back on the prompt so need to hit enter
                 to get an empty prompt, only run these command if the
                 transfer mode of device is set to auto -->
            <interaction>
                <!-- discover IOS entities -->
                <command>show inventory raw</command>
                <response>%prompt%</response>
                <capture
                    buffer="^NAME:([^,]+),\s*DESCR:([^\n]+)\nPID:([^,]+),\s*VID:([^,]+),\s*SN:(.+)$"
                    ignoreFailure="true" multipleValues="true">
                    <property name="hardwareInventoryIosEntity.name">{1}</property>
                    <property name="hardwareInventoryIosEntity.descr">{2}</property>
                    <property name="hardwareInventoryIosEntity.pid">{3}</property>
                    <property name="hardwareInventoryIosEntity.vid">{4}</property>
                    <property name="hardwareInventoryIosEntity.sn">{5}</property>
                </capture>
            </interaction>
            <interaction>
                <!-- discover memory locations and sizes -->
                <command>show memory statistics</command>
                <response>%prompt%</response>
                <capture
                    buffer="^\s*(\S+)\s+\S+\s+(\d+)\s+(\d+)\s+(\d+)\s+\d+\s+\d+\s*$"
                    ignoreFailure="true" multipleValues="true">
                    <property name="hardwareInventoryMemory.name">{1}</property>
                    <property name="hardwareInventoryMemory.bytesTotal">{2}</property>
                    <property name="hardwareInventoryMemory.bytesUsed">{3}</property>
                    <property name="hardwareInventoryMemory.bytesFree">{4}</property>
                </capture>
            </interaction>
            <interaction>
                <!-- discover file systems, sizes, and usage -->
                <command>dir all-filesystems</command>
                <response>%prompt%</response>
                <capture
                    buffer="Directory of (\S+)\:/[\w \#\+\:\.\-\x0a\x0d+\x3c\x3e]+\n(\d+) bytes total \((\d+) bytes free\)"
                    ignoreFailure="true" multipleValues="true">
                    <property name="hardwareInventoryFileSystem.name">{1}</property>
                    <property name="hardwareInventoryFileSystem.bytesTotal">{2}</property>
                    <property name="hardwareInventoryFileSystem.bytesFree">{3}</property>
                </capture>
            </interaction>
        </deviceCommand>
        <deviceCommand>
            <!-- discover image details -->
            <guid>2993A257-F634-4FFA-560F-B921EE64D6AC</guid>
            <assert condition="(-EXISTS- disc.imageFilename)"
                key="assert.imageFilename.notFound" onFailure="abort"/>
            <assert
                condition="((-EXISTS- disc.imageFilesystem) -OR- (-EXISTS- targetImageFilesystem))"
                key="assert.imageFilesystem.notFound" onFailure="abort"/>
            <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystem%"/>
                <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                    <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystemOnMsfcSupervisorEngine%"/>
                </condition>
            </condition>
            <condition test="-EXISTS- targetImageFilesystem">
                <assign property="cmd.imageLoadLocation" value="%targetImageFilesystem%"/>
            </condition>
            <condition test="-NOT- -EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <interaction>
                    <!-- what line am I logged in to? A "*" marks the line for
                         my own login session. -->
                    <prompt>%prompt%</prompt>
                    <command>show user</command>
                    <response>%prompt%</response>
                    <capture buffer="\*\s+(\d+)\s+vty\s+\d+" ignoreFailure="true">
                        <!-- lines like: "*  6 vty 0  admin  idle  00:00:00 10.1.1.51" -->
                        <property name="disc.sessionVtyLine">{1}</property>
                    </capture>
                    <capture buffer="\*\s+vty\s+(\d+)" ignoreFailure="true">
                        <!-- lines like: "*  vty 0  admin  idle  00:00:00 10.1.1.51"
                             Seen on 12.4(8), C2800NM-ADVENTERPRISEK9-M -->
                        <property name="disc.sessionVtyLine">{1}</property>
                    </capture>
                </interaction>
                <condition test="-EXISTS- disc.sessionVtyLine">
                    <interaction>
                        <!-- can this login session time out? -->
                        <prompt>%prompt%</prompt>
                        <command>show terminal</command>
                        <response>%prompt%</response>
                        <capture
                            buffer="Timeouts:\s+Idle EXEC.*\r*\n\s+(\d+):(\d+):(\d+)" ignoreFailure="true">
                            <property name="disc.sessionTerminationTimeHours">{1}</property>
                            <property name="disc.sessionTerminationTimeMinutes">{2}</property>
                            <property name="disc.sessionTerminationTimeSeconds">{3}</property>
                        </capture>
                    </interaction>
                    <condition test="(-EXISTS- disc.sessionTerminationTimeHours) -AND- (-EXISTS- disc.sessionTerminationTimeMinutes)">
                        <assign property="disc.sessionTerminationTime">
                            int intValue = (%disc.sessionTerminationTimeHours%
                                * 60) + %disc.sessionTerminationTimeMinutes%;
                            String value = Integer.toString(intValue);
                        </assign>
                    </condition>
                </condition>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>squeeze %cmd.imageLoadLocation%:</command>
                    <response property="cmd.deleteFiles">? [confirm]</response>
                    <response>nknown command</response>
                    <response>nvalid input</response>
                </interaction>
                <condition test="-EXISTS- cmd.deleteFiles">
                    <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                        <prompt>? [confirm]</prompt>
                        <command omitEOL="true">y</command>
                        <response property="cmd.squeezeError">rror</response>
                        <response property="cmd.continueSqueeze">? [confirm]</response>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.continueSqueeze">
                    <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                        <prompt>? [confirm]</prompt>
                        <command omitEOL="true">y</command>
                        <response property="cmd.squeezeError">rror</response>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <!-- @todo Ignoring this error for the time being. See bug #3101.
                <assert condition="-NOT- (-EXISTS- cmd.squeezeError)" onFailure="abort">
                    Error running squeeze command on the device.
                </assert>
                -->
                <!-- some IOS versions throw error on running squeeze if
                     squeeze log is not created, to get around it manually
                     erase the filesystem and then run the squeeze command -->
                <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show %cmd.imageLoadLocation%</command>
                        <response property="cmd.showInvalid">Invalid input</response>
                        <response>%prompt%</response>
                        <capture buffer="(\d+)\s*(\D+)?\s+total" ignoreFailure="true">
                            <property name="disc.imageFilesystemTotalSize">{1}</property>
                        </capture>
                        <capture
                            buffer="(\d+)\s?(\D+)?\s(free|available)" ignoreFailure="true">
                            <property name="disc.imageFilesystemFreeSize">{1}</property>
                        </capture>
                        <capture
                            buffer="\n\s*?\d+\s+\D+?(\d+).*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                            <property name="disc.imageFileSize">{1}</property>
                        </capture>
                        <capture
                            buffer="\n\s*\d+\s+\S+\s+image\s+\S+\s+\S+\s+\d+\s+(\d+).*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                            <property name="disc.imageFileSize">{1}</property>
                            <!-- For Catalyst switches (such as 4500/6500),
                                 files are listed in very different format;
                                 pull out the seventh word as the length. -->
                        </capture>
                        <capture buffer="\d+\s+(\D+)\s+(total|used)" ignoreFailure="true">
                            <property name="disc.imageFilesystemTotalSizeUnits">{1}</property>
                            <property name="disc.imageFilesystemFreeSizeUnits">{1}</property>
                            <property name="disc.imageFileSizeUnits">{1}</property>
                        </capture>
                        <!-- To get the correct size, run squeeze in the begining, devices
                             that do not support squeeze will just ignore the command -->
                        <!-- For total size: 2940 uses "bytes total", others uses "total" -->
                        <!-- For free size: 2940 uses "bytes free", others uses "available" -->
                        <!-- show flash command is used for size captures, dir command cannot
                              be used becauses devices like 2501 do not support it -->
                        <!-- yet other devices support dir but not show, so must use
                             dir. Found at ConEd (7206 running 11.2(14)P, C7200-JS-MUX) -->
                    </interaction>
                    <condition test="-EXISTS- cmd.showInvalid">
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>dir %cmd.imageLoadLocation%:</command>
                            <response property="cmd.dirInvalid">Invalid input</response>
                            <response>%prompt%</response>
                            <capture
                                buffer="\n\s*?\d+\s+(\d+)\s+.*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                                <property name="disc.imageFileSize">{1}</property>
                            </capture>
                            <capture
                                buffer="(\d+)\s+(\D+)\s+available\s+\((\d+)\s+\D+\s+used\)" ignoreFailure="true">
                                <property name="disc.imageFilesystemFreeSize">{1}</property>
                                <property name="disc.imageFilesystemUsedSize">{3}</property>
                                <property name="disc.imageFilesystemFreeSizeUnits">{2}</property>
                                <property name="disc.imageFilesystemUsedSizeUnits">{2}</property>
                                <property name="disc.imageFileSizeUnits">{2}</property>
                            </capture>
                            <!-- handle output like on CatOS:
                                 1821380 bytes available (14562620 bytes used)
                                 -->
                        </interaction>
                    </condition>
                    <condition test="-EXISTS- cmd.dirInvalid">
                        <!-- retry same show command with sup- prefixed to filesystem -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>show sup-%cmd.imageLoadLocation%</command>
                            <response property="cmd.showInvalid2">Invalid input</response>
                            <response>%prompt%</response>
                            <capture buffer="(\d+)\s*(\D+)?\s+total" ignoreFailure="true">
                                <property name="disc.imageFilesystemTotalSize">{1}</property>
                            </capture>
                            <capture
                                buffer="(\d+)\s?(\D+)?\s(free|available)" ignoreFailure="true">
                                <property name="disc.imageFilesystemFreeSize">{1}</property>
                            </capture>
                            <capture
                                buffer="\n\s*?\d+\s+\D+?(\d+).*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                                <property name="disc.imageFileSize">{1}</property>
                            </capture>
                            <capture
                                buffer="\n\s*\d+\s+\S+\s+image\s+\S+\s+\S+\s+\d+\s+(\d+).*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                                <property name="disc.imageFileSize">{1}</property>
                            </capture>
                            <capture buffer="\d+\s+(\D+)\s+(total|used)" ignoreFailure="true">
                                <property name="disc.imageFilesystemTotalSizeUnits">{1}</property>
                                <property name="disc.imageFilesystemFreeSizeUnits">{1}</property>
                                <property name="disc.imageFileSizeUnits">{1}</property>
                            </capture>
                        </interaction>
                        <condition test="-NOT- (-EXISTS- cmd.showInvalid2)">
                            <!-- force subsequent commands to use the sup-filesystem -->
                            <assign property="disc.imageFilesystem" value="sup-%disc.imageFilesystem%"/>
                            <assign property="cmd.imageLoadLocation" value="sup-%cmd.imageLoadLocation%"/>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- cmd.showInvalid2">
                        <!-- retry same dir command with sup- prefixed to filesystem -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>dir sup-%cmd.imageLoadLocation%:</command>
                            <response property="cmd.dirInvalid2">Invalid input</response>
                            <response>%prompt%</response>
                            <capture
                                buffer="\n\s*?\d+\s+(\d+)\s+.*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                                <property name="disc.imageFileSize">{1}</property>
                            </capture>
                            <capture
                                buffer="(\d+)\s+(\D+)\s+available\s+\((\d+)\s+\D+\s+used\)" ignoreFailure="true">
                                <property name="disc.imageFilesystemFreeSize">{1}</property>
                                <property name="disc.imageFilesystemUsedSize">{3}</property>
                                <property name="disc.imageFilesystemFreeSizeUnits">{2}</property>
                                <property name="disc.imageFilesystemUsedSizeUnits">{2}</property>
                                <property name="disc.imageFileSizeUnits">{2}</property>
                            </capture>
                        </interaction>
                        <condition test="-NOT- (-EXISTS- cmd.dirInvalid2)">
                            <!-- force subsequent commands to use the sup-filesystem -->
                            <assign property="disc.imageFilesystem" value="sup-%disc.imageFilesystem%"/>
                            <assign property="cmd.imageLoadLocation" value="sup-%cmd.imageLoadLocation%"/>
                        </condition>
                    </condition>
                </condition>
                <condition test="-EXISTS- targetImageFilesystem">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show %cmd.imageLoadLocation%</command>
                        <response property="cmd.showInvalid2">Invalid input</response>
                        <response>%prompt%</response>
                        <capture buffer="(\d+)\s*(\D+)?\s+total" ignoreFailure="true">
                            <property name="disc.targetImageFilesystemTotalSize">{1}</property>
                        </capture>
                        <capture
                            buffer="(\d+)\s?(\D+)?\s(free|available)" ignoreFailure="true">
                            <property name="disc.targetImageFilesystemFreeSize">{1}</property>
                        </capture>
                        <capture buffer="\d+\s+(\D+)\s+(total|used)" ignoreFailure="true">
                            <property name="disc.targetImageFilesystemTotalSizeUnits">{1}</property>
                            <property name="disc.targetImageFilesystemFreeSizeUnits">{1}</property>
                            <property name="disc.targetImageFileSizeUnits">{1}</property>
                        </capture>
                    </interaction>
                    <condition test="-EXISTS- cmd.showInvalid2">
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>dir %cmd.imageLoadLocation%:</command>
                            <response>%prompt%</response>
                            <capture
                                buffer="(\d+)\s+(\D+)\s+available\s+\((\d+)\s+\D+\s+used\)" ignoreFailure="true">
                                <property name="disc.targetImageFilesystemFreeSize">{1}</property>
                                <property name="disc.targetImageFilesystemUsedSize">{3}</property>
                                <property name="disc.targetImageFilesystemFreeSizeUnits">{2}</property>
                                <property name="disc.targetImageFilesystemUsedSizeUnits">{2}</property>
                                <property name="disc.targetImageFileSizeUnits">{2}</property>
                            </capture>
                            <!-- handle output like on CatOS:
                                 1821380 bytes available (14562620 bytes used)
                                 -->
                        </interaction>
                    </condition>
                </condition>
            </condition>
            <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <assert condition="%transferMode% -EQ- tftp"
                    key="assert.tftp.msfc.supervisor" onFailure="abort"/>
                <!-- CatOS supports only tftp -->
                <!-- when logged in to an MSFC that is booted from an image
                     stored on its supervisor engine's filesystem, need to
                     log in to the SE (which is running CatOS) and get the
                     file from there (cannot see it when in the MSFC). -->
                <interaction>
                    <!-- switch over to the supervisor engine; assumed to
                         be running in slot 1 -->
                    <prompt>%prompt%</prompt>
                    <command>session slot 1 processor 1</command>
                    <response>sername:</response>
                </interaction>
                <!-- assuming we must supply username, password, and
                     priv password, and that these are the same on the
                     MSFC and the supervisor engine. -->
                <interaction regex="true">
                    <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                    <command>%username%</command>
                    <response>[Pp]assword:</response>
                    <error>([Uu]ser.*:|[Ll]ogin.*:)</error>
                </interaction>
                <interaction regex="true">
                    <prompt>[Pp]assword:</prompt>
                    <command sensitive="true">%password%</command>
                    <pauseSeconds>1</pauseSeconds>
                    <response>&gt;</response>
                    <error>([Pp]assword:|Authentication failed)</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <command>enable</command>
                    <response>assword:</response>
                </interaction>
                <interaction>
                    <prompt>assword:</prompt>
                    <command sensitive="true">%privPassword%</command>
                    <response>(enable)</response>
                    <error>Sorry</error>
                    <error>assword:</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command>set logging session disable</command>
                    <pauseSeconds>3</pauseSeconds>
                    <response>(enable)</response>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command/>
                    <capture>
                        <property name="cmd.sePrompt"/>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>set length 0</command>
                    <response>Screen length for this session set to 0</response>
                </interaction>
                <!-- begin CatOS discover-image-details code -->
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>squeeze %cmd.imageLoadLocation%:</command>
                    <response property="cmd.continueSqueeze">proceed</response>
                    <response property="cmd.squeezeFailed">Try again later</response>
                    <response property="cmd.squeezeFailed">unknown device</response>
                    <response>%cmd.sePrompt%</response>
                    <!-- Intel has a C6509 running 8.5(2) that does not support
                         squeeze command; ignore errors like "Unknown command".
                         -->
                </interaction>
                <condition test="-EXISTS- cmd.squeezeFailed">
                    <interaction>
                        <!-- log out of the supervisor engine -->
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>exit</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <assert condition="-NOT- -EXISTS- cmd.squeezeFailed"
                    key="assert.squeezeCmd.failed" onFailure="abort"/>
                <condition test="-EXISTS- cmd.continueSqueeze">
                    <interaction>
                        <prompt>proceed</prompt>
                        <command>y</command>
                        <response>proceed</response>
                    </interaction>
                    <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                        <prompt>proceed</prompt>
                        <command>y</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>dir %cmd.imageLoadLocation%:</command>
                    <response>%cmd.sePrompt%</response>
                    <capture
                        buffer="\n\s*?\d+\s+(\d+)\s+.*\s+(\Q%disc.imageFilename%\E)" ignoreFailure="true">
                        <property name="disc.imageFileSize">{1}</property>
                    </capture>
                    <capture
                        buffer="(\d+)\s+(\D+)\s+available\s+\((\d+)\s+\D+\s+used\)" ignoreFailure="true">
                        <property name="disc.imageFilesystemFreeSize">{1}</property>
                        <property name="disc.imageFilesystemUsedSize">{3}</property>
                        <property name="disc.imageFilesystemFreeSizeUnits">{2}</property>
                        <property name="disc.imageFilesystemUsedSizeUnits">{2}</property>
                        <property name="disc.imageFileSizeUnits">{2}</property>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>show system</command>
                    <response>%cmd.sePrompt%</response>
                    <capture
                        buffer="(L|l)ogout\r?\n?.+\r?\n?.+\s+(\d+)\smin$" ignoreFailure="true">
                        <property name="disc.sessionTerminationTime">{2}</property>
                    </capture>
                </interaction>
                <interaction>
                    <!-- log out of the supervisor engine -->
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>exit</command>
                    <response>%prompt%</response>
                </interaction>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- copy running to net -->
            <guid>388DFC1D-2DF0-D833-5762-F5121A797069</guid>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy running-config tftp</command>
                    <response property="cmd.remote">Remote host</response>
                    <response property="cmd.address">Address or name of remote host</response>
                    <!-- cmd.remote for IOS 11 and earlier -->
                    <!-- cmd.address for IOS 12 and later -->
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <!-- Some versions of 12.x require a colon after tftp -->
                        <prompt>mbiguous command</prompt>
                        <command>copy running-config tftp:</command>
                        <response property="cmd.remote">Remote host</response>
                        <response property="cmd.address">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.remote">
                    <interaction>
                        <prompt>Remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file to write</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file to write</prompt>
                        <command>%transferFilename%</command>
                        <response>Write file</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Write file</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error retry="true">Can not open file</error>
                        <error retry="true">(Timed out)</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>estination file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>%transferFilename%</command>
                        <response>bytes copied</response>
                        <response>%prompt%</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error retry="true">Can not open file</error>
                        <error retry="true">(Timed out)</error>
                        <error>error code</error>
                        <error>Error opening</error>
                        <error>Error writing</error>
                        <error>Error parsing</error>
                        <error>Bad address</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy running-config ftp://%ftpUsername%:%ftpPassword%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>estination file</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
                <!-- Password value must appear in command url arg? -->
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy running-config scp://%scpUsername%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>Destination username</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction>
                    <prompt>Destination username</prompt>
                    <command>%scpUsername%</command>
                    <response>estination file</response>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>assword:</response>
                    <error>Error opening</error>
                    <error>Error writing</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
                <!-- Some scp's will sit for well over a minute after the
                    password prompt is answered. Lab 1200 running 12.3.7
                    did this. -->
            </condition>
            <condition test="%transferMode% -EQ- tunneled">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show running-config</command>
                    <response>%prompt%</response>
                    <capture>
                        <property name="fileContents"/>
                    </capture>
                </interaction>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- copy startup to net -->
            <guid>4E005EF8-BAC1-BD15-EF63-DDC6D2547FFE</guid>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy startup-config tftp</command>
                    <response property="cmd.remote">Remote host</response>
                    <response property="cmd.address">Address or name of remote host</response>
                    <!-- cmd.remote for IOS 11 and earlier -->
                    <!-- cmd.address for IOS 12 and later -->
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <!-- Some versions of 12.x require a colon after tftp -->
                        <prompt>mbiguous command</prompt>
                        <command>copy startup-config tftp:</command>
                        <response property="cmd.remote">Remote host</response>
                        <response property="cmd.address">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.remote">
                    <interaction>
                        <prompt>Remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file to write</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file to write</prompt>
                        <command>%transferFilename%</command>
                        <response>Write file</response>
                    </interaction>
                    <interaction>
                        <prompt>Write file</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error retry="true">Can not open file</error>
                        <error retry="true">(Timed out)</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>estination file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>%transferFilename%</command>
                        <response>bytes copied</response>
                        <response>%prompt%</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error retry="true">Can not open file</error>
                        <error retry="true">(Timed out)</error>
                        <error>error code</error>
                        <error>Error opening</error>
                        <error>Error writing</error>
                        <error>Error parsing</error>
                        <error>Bad address</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy startup-config ftp://%ftpUsername%:%ftpPassword%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>estination file</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
                <!-- Password value must appear in command url arg? -->
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy startup-config scp://%scpUsername%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>Destination username</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction>
                    <prompt>Destination username</prompt>
                    <command>%scpUsername%</command>
                    <response>estination file</response>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>assword:</response>
                    <error>Error opening</error>
                    <error>Error writing</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword:</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
            </condition>
            <condition test="%transferMode% -EQ- tunneled">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show configuration</command>
                    <response>%prompt%</response>
                    <capture>
                        <property name="fileContents"/>
                    </capture>
                </interaction>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- copy net to running -->
            <guid>5421B3AE-2C94-0519-5D07-B4971BB15C7D</guid>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy tftp running-config</command>
                    <response property="cmd.host">Host or network configuration file</response>
                    <response property="cmd.address">Address or name of remote host</response>
                    <!-- cmd.host for IOS 11 and earlier -->
                    <!-- cmd.address for IOS 12 and later -->
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <!-- Some versions of 12.x require a colon after tftp -->
                        <prompt>mbiguous command</prompt>
                        <command>copy tftp: running-config</command>
                        <response property="cmd.host">Host or network configuration file</response>
                        <response property="cmd.address">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.host">
                    <interaction>
                        <prompt>Host or network configuration file</prompt>
                        <command>host</command>
                        <response>Address of remote host</response>
                    </interaction>
                    <interaction>
                        <prompt>Address of remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file</prompt>
                        <command>%transferFilename%</command>
                        <response>Configure using</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Configure using</prompt>
                        <command/>
                        <pauseSeconds>5</pauseSeconds>
                        <response property="cmd.dynamicMapConfirm">Dynamic mapping in use, do you want to delete all entries</response>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                        <!-- Pause to avoid missing prompt before recapture -->
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction>
                        <prompt>ource file</prompt>
                        <command>%transferFilename%</command>
                        <response>estination file</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>running-config</command>
                        <pauseSeconds>5</pauseSeconds>
                        <response property="cmd.dynamicMapConfirm">Dynamic mapping in use, do you want to delete all entries</response>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                        <!-- Pause to avoid missing prompt before recapture -->
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.dynamicMapConfirm">
                    <!-- when changing ACL used by NAT, file copy emits extra prompt -->
                    <interaction>
                        <prompt>do you want to delete all entries</prompt>
                        <command>y</command>
                        <pauseSeconds>5</pauseSeconds>
                        <response>bytes copied</response>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy ftp://%ftpUsername%:%ftpPassword%@%address% running-config</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>running-config</command>
                    <pauseSeconds>5</pauseSeconds>
                    <response property="cmd.dynamicMapConfirm">Dynamic mapping in use, do you want to delete all entries</response>
                    <response>bytes copied</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <!-- Pause to avoid missing prompt before recapture -->
                </interaction>
                <condition test="-EXISTS- cmd.dynamicMapConfirm">
                    <interaction>
                        <prompt>do you want to delete all entries</prompt>
                        <command>yes</command>
                        <pauseSeconds>5</pauseSeconds>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
                <!-- Password value must appear in command url arg? -->
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy scp://%scpUsername%@%address% running-config</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>running-config</command>
                    <response>assword:</response>
                    <error>Error opening</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword:</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <pauseSeconds>5</pauseSeconds>
                    <response property="cmd.dynamicMapConfirm">Dynamic mapping in use, do you want to delete all entries</response>
                    <response>bytes copied</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error reading</error>
                    <!-- Pause to avoid missing prompt before recapture -->
                </interaction>
                <condition test="-EXISTS- cmd.dynamicMapConfirm">
                    <interaction>
                        <prompt>do you want to delete all entries</prompt>
                        <command>yes</command>
                        <pauseSeconds>5</pauseSeconds>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                        <error>Error reading</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- tunneled">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>configure terminal</command>
                    <response>(config)</response>
                    <response>(confi)</response>
                    <response>(conf)</response>
                </interaction>
                <loop input="fileContents" variable="fileLine">
                    <assign property="cmd.dynamicMapConfirm" value="false"/>
                    <interaction>
                        <prompt>#</prompt>
                        <command>%loop.fileLine%</command>
                        <response property="cmd.dynamicMapConfirm">Dynamic mapping in use, do you want to delete all entries</response>
                        <response>#</response>
                        <syntaxErrorCheck property="syntaxErrorOccurred"/>
                    </interaction>
                    <!-- in config mode depending on the nesting
                        level the prompt changes, so look for # -->
                    <condition test="cmd.dynamicMapConfirm -EQ- true">
                        <!-- See bug 3725; UNTESTED as to whether any "ip nat"
                        commands will prompt here; if they do, I assume any
                        syntax error would not have made the device emit this
                        prompt (so no syntaxErrorCheck tag). -->
                        <interaction>
                            <prompt>do you want to delete all entries</prompt>
                            <command>yes</command>
                            <pauseSeconds>5</pauseSeconds>
                            <response>#</response>
                        </interaction>
                    </condition>
                    <break condition="(-EXISTS- stopTunnelingOnSyntaxErrors) -AND- (-EXISTS- syntaxErrorOccurred)"/>
                </loop>
                <interaction>
                    <prompt>#</prompt>
                    <command>end</command>
                    <response>%prompt%</response>
                </interaction>
                <!-- execute the end command to get out of the config mode -->
            </condition>
            <interaction>
                <!-- recapture any new prompt -->
                <command/>
                <capture>
                    <property name="prompt"/>
                </capture>
            </interaction>
            <syntaxErrors>
                <syntaxError>^% Invalid input detected.*</syntaxError>
                <syntaxError>^% Incomplete command.*</syntaxError>
                <syntaxError>^.*ommand authorization failed.*</syntaxError>
                <syntaxError>^.*unreasonable value.*</syntaxError>
                <syntaxError>^.*Command rejected.*</syntaxError>
            </syntaxErrors>
            <!-- FTP/SCP address prompt only appears after previous Net->XC -->
        </deviceCommand>
        <deviceCommand>
            <!-- copy net to startup -->
            <guid>61A43CB3-2D57-66F7-32E3-59A1A1CD291E</guid>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy tftp startup-config</command>
                    <response property="cmd.host">Host or network configuration file</response>
                    <response property="cmd.address">Address of remote host</response>
                    <response property="cmd.name">Address or name of remote host</response>
                    <!-- cmd.host for IOS 10 -->
                    <!-- cmd.address for IOS 11 and earlier -->
                    <!-- cmd.namefor IOS 12 and later -->
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <!-- Some versions of 12.x require a colon after tftp -->
                        <prompt>mbiguous command</prompt>
                        <command>copy tftp: startup-config</command>
                        <response property="cmd.host">Host or network configuration file</response>
                        <response property="cmd.address">Address of remote host</response>
                        <response property="cmd.name">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.host">
                    <interaction>
                        <prompt>Host or network configuration file</prompt>
                        <command>host</command>
                        <response>Address of remote host</response>
                    </interaction>
                    <interaction>
                        <prompt>Address of remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file</prompt>
                        <command>%transferFilename%</command>
                        <response>Configure using</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Configure using</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address of remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file</prompt>
                        <command>%transferFilename%</command>
                        <response>Configure using</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Configure using</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.name">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction>
                        <prompt>ource file</prompt>
                        <command>%transferFilename%</command>
                        <response>estination file</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>startup-config</command>
                        <response>bytes copied</response>
                        <response property="cmd.continuePrompt">Do you still wish to proceed</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.continuePrompt">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you still wish to proceed</prompt>
                        <command>yes</command>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <!-- Note: IOS prior to 12.1.26 may fail to receive from  a -->
                <!--       windows tftp server (bug 3224).                  -->
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy ftp://%ftpUsername%:%ftpPassword%@%address% startup-config</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>startup-config</command>
                    <response>bytes copied</response>
                    <response property="cmd.continuePrompt">Do you still wish to proceed</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                </interaction>
                <condition test="-EXISTS- cmd.continuePrompt">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you still wish to proceed</prompt>
                        <command>yes</command>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
                <!-- Password value must appear in command url arg? -->
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy scp://%scpUsername%@%address% startup-config</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response property="cmd.username">Source username</response>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                        <!-- cmd.username sometimes appears, other times not -->
                    </interaction>
                    <condition test="-EXISTS- cmd.username">
                        <interaction>
                            <prompt>Source username</prompt>
                            <command>%scpUsername%</command>
                            <response>ource file</response>
                        </interaction>
                    </condition>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                    <error>Error opening</error>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>startup-config</command>
                    <response>assword:</response>
                    <error>Error opening</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword:</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <response>bytes copied</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error reading</error>
                </interaction>
            </condition>
            <!-- FTP/SCP address prompt only appears after previous Net->XC -->
        </deviceCommand>
        <deviceCommand>
            <!-- copy running to startup -->
            <guid>7023D2D2-1A14-7DB8-14F6-8B8485C5015E</guid>
            <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- 180">
                <prompt>%prompt%</prompt>
                <command>copy running-config startup-config</command>
                <response>OK</response>
                <response property="cmd.destination">estination file</response>
                <response property="cmd.overwrite">Overwrite the previous</response>
                <error retry="true">Device or resource busy</error>
                <error retry="true">memory is in use</error>
                <!-- cmd.overwrite response occurs after an image load -->
            </interaction>
            <condition test="-EXISTS- cmd.overwrite">
                <interaction>
                    <prompt>Overwrite the previous</prompt>
                    <command>yes</command>
                    <response>OK</response>
                    <response property="cmd.destination">estination file</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                </interaction>
            </condition>
            <condition test="-EXISTS- cmd.destination">
                <interaction>
                    <prompt>estination file</prompt>
                    <command>startup-config</command>
                    <response property="cmd.overwrite">Overwrite the previous</response>
                    <response property="cmd.continue">Continue?</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <!-- 12.0.8b on 2501 prompts about overwrite here -->
                    <!-- 12.3(7)XI5 on C10008 can prompt to continue here,
                         warning of possible nvram corruption -->
                </interaction>
                <condition test="-EXISTS- cmd.overwrite">
                    <interaction>
                        <prompt>Overwrite the previous</prompt>
                        <command>yes</command>
                        <response property="cmd.continue">Continue?</response>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.continue">
                    <interaction>
                        <prompt>Continue?</prompt>
                        <command>yes</command>
                        <response property="cmd.overwrite2">Overwrite the previous</response>
                        <response>%prompt%</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                    </interaction>
                    <condition test="-EXISTS- cmd.overwrite2">
                        <interaction>
                            <prompt>Overwrite the previous</prompt>
                            <command>yes</command>
                            <response>OK</response>
                            <error retry="true">Device or resource busy</error>
                            <error retry="true">memory is in use</error>
                        </interaction>
                    </condition>
                </condition>
            </condition>
            <!-- Some versions (12.0-5.2XU) omit an OK response here. -->
        </deviceCommand>
        <deviceCommand>
            <!-- copy image to net -->
            <guid>89F733B6-4C59-CF2B-BD10-CD9EA41BA6DB</guid>
            <assert
                condition="(-EXISTS- disc.imageFilesystem) -AND- (-EXISTS- disc.imageFilename)"
                key="assert.oldImage.filelocation.notDiscovered" onFailure="skip"/>
            <condition test="-NOT- -EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>dir %disc.imageFilesystem%:%disc.imageFilename%</command>
                    <response property="cmd.invalid">Invalid input detected</response>
                    <response property="cmd.absent">Error opening</response>
                    <response property="cmd.copyFailed">Error reading</response>
                    <response property="cmd.deleted">%disc.imageFilename% [deleted]</response>
                    <response property="cmd.present">%disc.imageFilename%</response>
                    <response>%prompt%</response>
                    <!-- we try "dir" first (instead of "show") for archive imgs -->
                </interaction>
                <condition test="-EXISTS- cmd.invalid">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show %disc.imageFilesystem%</command>
                        <response property="cmd.deleted">%disc.imageFilename% [deleted]</response>
                        <response property="cmd.present">%disc.imageFilename%</response>
                        <response>%prompt%</response>
                    </interaction>
                    <!-- for 2501 we must use "show" cmd rather than "dir" -->
                </condition>
                <assert condition="-EXISTS- cmd.present"
                    key="assert.oldImage.notFound" onFailure="skip"/>
                <!-- pre-copy error checks -->
                <condition test="%transferMode% -EQ- tftp">
                    <assert condition="%disc.version% -GE- 10.3"
                        key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                </condition>
                <condition test="%transferMode% -EQ- ftp">
                    <assert condition="%disc.version% -GE- 12.0"
                        key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                </condition>
                <condition test="-EXISTS- imageArchive">
                    <!-- @todo temporary assertion until bug 1776 is fixed -->
                    <assert condition="1 -EQ- 0"
                        key="assert.archiveStyle.imageSave.notavailable" onFailure="skip"/>
                </condition>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <!-- enter config mode, disable session timeout to ensure
                         image file transfer doesn't timeout. Warning:
                         most IOS's will change the prompt to "(config-line)",
                         but ran into one (12.0(5.2)XU, C2900XL-C3H2S-M) that
                         changed it to "(config-)". -->
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>config term</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>line %disc.sessionVtyLine%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>exec-timeout 0 0</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>end</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <condition test="%transferMode% -EQ- tftp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image save -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>copy %disc.imageFilesystem%: tftp</command>
                            <response property="cmd.address">Address or name of remote host</response>
                            <response property="cmd.partition">Which partition?</response>
                            <response property="cmd.source">ource file</response>
                            <!-- cmd.address for IOS 11 and earlier -->
                            <!-- cmd.source for IOS 12 and later; alse seen on 11.2 -->
                            <response property="cmd.ambiguous">mbiguous command</response>
                            <response property="cmd.invalidInput">Invalid input detected</response>
                        </interaction>
                        <condition test="-EXISTS- cmd.invalidInput">
                            <interaction>
                                <!-- Some versions of IOS (like 2501) do not like
                                     colon after %disc.imageFilesystem%-->
                                <prompt>%prompt%</prompt>
                                <command>copy %disc.imageFilesystem% tftp</command>
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.partition">Which partition?</response>
                                <response property="cmd.source">ource file</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.ambiguous">
                            <interaction>
                                <!-- Some versions of 12.x require a colon after tftp -->
                                <prompt>mbiguous command</prompt>
                                <command>copy %disc.imageFilesystem%: tftp:</command>
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.partition">Which partition?</response>
                                <response property="cmd.source">ource file</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.partition">
                            <interaction>
                                <prompt>Which partition?</prompt>
                                <command/>
                                <!-- defaults to partition 1 -->
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.source">ource file</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                            </interaction>
                        </condition>
                        <condition test="(-EXISTS- cmd.address) -AND- (-NOT- -EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>ource file</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                            <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                <interaction>
                                    <prompt>ource file</prompt>
                                    <command>%disc.imageFilename%</command>
                                    <response>estination file</response>
                                </interaction>
                                <interaction>
                                    <prompt>estination file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>yes/no</response>
                                </interaction>
                                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                    <prompt>yes/no</prompt>
                                    <command>yes</command>
                                    <response>Upload to server done</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">file not found</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                </interaction>
                            </condition>
                        </condition>
                        <condition test="(-EXISTS- cmd.source) -AND- (-NOT- -EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%disc.imageFilename%</command>
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.destination">estination file</response>
                            </interaction>
                            <condition test="-EXISTS- cmd.address">
                                <interaction>
                                    <prompt>Address or name of remote host</prompt>
                                    <command>%address%</command>
                                    <response>estination file</response>
                                    <response property="cmd.copyFailed">Bad address or host name</response>
                                    <response property="cmd.copyFailed">Invalid host address or name</response>
                                </interaction>
                                <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                    <condition test="%disc.version% -GE- 12.3.9">
                                    <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                    <prompt>estination file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">Error opening</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                    </interaction>
                                    </condition>
                                    <condition test="%disc.version% -LT- 12.3.9">
                                    <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -MULT- 3">
                                    <prompt>estination file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">Error opening</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                    <!-- timeout 3x longer for 12.3.4T2 tftp perf bug -->
                                    </interaction>
                                    </condition>
                                </condition>
                            </condition>
                            <condition test="-EXISTS- cmd.destination">
                                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                    <prompt>estination file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>Address or name of remote host</response>
                                    <response property="cmd.copyFailed">Error opening</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                    <response property="cmd.copyFailed">%prompt%</response>
                                </interaction>
                                <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                    <condition test="%disc.version% -GE- 12.3.9">
                                    <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                    <prompt>Address or name of remote host</prompt>
                                    <command>%address%</command>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Bad address or host name</response>
                                    <response property="cmd.copyFailed">Invalid host address or name</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">Error opening</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                    <response>%prompt%</response>
                                    <!-- some devices emit one ! and then the prompt -->
                                    </interaction>
                                    </condition>
                                    <condition test="%disc.version% -LT- 12.3.9">
                                    <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -MULT- 3">
                                    <prompt>Address or name of remote host</prompt>
                                    <command>%address%</command>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Bad address or host name</response>
                                    <response property="cmd.copyFailed">Invalid host address or name</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">Error opening</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">Timed out</response>
                                    <response>%prompt%</response>
                                    <!-- timeout 3x longer for 12.3.4T2 tftp perf bug -->
                                    </interaction>
                                    </condition>
                                </condition>
                            </condition>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image save -->
                        <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>%prompt%</prompt>
                            <command>archive upload-sw tftp://%address%/%transferFilename%</command>
                            <response>%prompt%</response>
                            <response property="cmd.copyFailed">Error</response>
                        </interaction>
                    </condition>
                </condition>
                <condition test="%transferMode% -EQ- ftp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image save -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command sensitive="true" sensitivePhrase="%ftpPassword%">copy %disc.imageFilesystem%: ftp://%ftpUsername%:%ftpPassword%@%address%</command>
                            <response>ource file</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                        <condition test="-NOT- (-EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%disc.imageFilename%</command>
                                <response>Address or name of remote host</response>
                            </interaction>
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>estination file</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                        </condition>
                        <condition test="-NOT- -EXISTS- cmd.copyFailed">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                <prompt>estination file</prompt>
                                <command>%transferFilename%</command>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">error code</response>
                                <response property="cmd.copyFailed">Error opening</response>
                                <response property="cmd.copyFailed">Error reading</response>
                                <response property="cmd.copyFailed">Error writing</response>
                            </interaction>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image save -->
                        <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>%prompt%</prompt>
                            <command sensitive="true" sensitivePhrase="%ftpPassword%">archive upload-sw ftp://%ftpUsername%:%ftpPassword%@%address%/%transferFilename%</command>
                            <response>%prompt%</response>
                            <response property="cmd.copyFailed">Error</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                    </condition>
                    <!-- Password value must appear in command url arg? -->
                </condition>
                <condition test="%transferMode% -EQ- scp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image save -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command stutterMilliSeconds="50">copy %disc.imageFilesystem%: scp://%scpUsername%@%address%</command>
                            <response>ource file</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                        <condition test="-NOT- (-EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%disc.imageFilename%</command>
                                <response>Address or name of remote host</response>
                            </interaction>
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>Destination username</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                        </condition>
                        <condition test="-NOT- (-EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>Destination username</prompt>
                                <command>%scpUsername%</command>
                                <response>estination file</response>
                            </interaction>
                            <interaction>
                                <prompt>estination file</prompt>
                                <command>%transferFilename%</command>
                                <response>assword:</response>
                                <response property="cmd.copyFailed">Error opening</response>
                                <response property="cmd.copyFailed">Error writing</response>
                            </interaction>
                        </condition>
                        <condition test="-NOT- (-EXISTS- cmd.copyFailed)">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                <prompt>assword:</prompt>
                                <command sensitive="true">%scpPassword%</command>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">error code</response>
                                <response property="cmd.copyFailed">Error opening</response>
                                <response property="cmd.copyFailed">Error reading</response>
                                <response property="cmd.copyFailed">Error writing</response>
                            </interaction>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image save -->
                        <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>%prompt%</prompt>
                            <command sensitive="true" sensitivePhrase="%scpPassword%">archive upload-sw scp://%scpUsername%:%scpPassword%@%address%/%transferFilename%</command>
                            <response>%prompt%</response>
                            <response property="cmd.copyFailed">Error</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                    </condition>
                </condition>
                <!-- archive save: 2 mins added to timeout to tar up old image -->
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <!-- enter config mode, restore original session timeout -->
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>config term</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>line %disc.sessionVtyLine%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>exec-timeout %disc.sessionTerminationTime% %disc.sessionTerminationTimeSeconds%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>end</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <assert condition="-NOT- (-EXISTS- cmd.copyFailed)"
                    key="assert.imageSave.filetransfer.error" onFailure="abort"/>
            </condition>
            <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <interaction regex="true">
                    <!-- switch over to the supervisor engine; assumed to
                         be running in slot 1 -->
                    <prompt>\Q%prompt%\E</prompt>
                    <command>session slot 1 processor 1</command>
                    <response>([Uu]ser.*:|[Ll]ogin.*:)</response>
                </interaction>
                <!-- assuming we must supply username, password, and
                     priv password, and that these are the same on the
                     MSFC and the supervisor engine. -->
                <interaction regex="true">
                    <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                    <command>%username%</command>
                    <response>[Pp]assword:</response>
                    <error>([Uu]ser.*:|[Ll]ogin.*:)</error>
                </interaction>
                <interaction regex="true">
                    <prompt>[Pp]assword:</prompt>
                    <command sensitive="true">%password%</command>
                    <pauseSeconds>1</pauseSeconds>
                    <response>&gt;</response>
                    <error>([Pp]assword:|Authentication failed)</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <command>enable</command>
                    <response>assword:</response>
                </interaction>
                <interaction>
                    <prompt>assword:</prompt>
                    <command sensitive="true">%privPassword%</command>
                    <response>(enable)</response>
                    <error>Sorry</error>
                    <error>assword:</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command>set logging session disable</command>
                    <pauseSeconds>3</pauseSeconds>
                    <response>(enable)</response>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command/>
                    <capture>
                        <property name="cmd.sePrompt"/>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>set length 0</command>
                    <response>Screen length for this session set to 0</response>
                </interaction>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>dir %disc.imageFilesystemOnMsfcSupervisorEngine%:</command>
                    <response property="cmd.present">%disc.imageFilename%</response>
                    <response>%cmd.sePrompt%</response>
                </interaction>
                <assert condition="-EXISTS- cmd.present"
                    key="assert.oldImage.notFound" onFailure="skip"/>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout 0</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>copy %disc.imageFilesystemOnMsfcSupervisorEngine%:%disc.imageFilename% tftp</command>
                    <response>IP address or name of remote host</response>
                    <error retry="true">Try again later</error>
                </interaction>
                <interaction>
                    <prompt>IP address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>Name of file to copy to</response>
                    <response property="cmd.unknownHost">Unknown host</response>
                </interaction>
                <condition test="(-EXISTS- cmd.unknownHost) -AND- (-EXISTS- disc.sessionTerminationTime)">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout %disc.sessionTerminationTime%</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.unknownHost">
                    <interaction>
                        <!-- log out of the supervisor engine -->
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>exit</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <assert condition="-NOT- (-EXISTS- cmd.unknownHost)"
                    key="assert.imageSave.unknownhost.error" onFailure="abort"/>
                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                    <prompt>Name of file to copy to</prompt>
                    <command>%transferFilename%</command>
                    <response property="cmd.connectionFail">TFTP connection fail</response>
                    <response property="cmd.connectionFail">Failed to copy</response>
                    <response property="cmd.connectionFail">Cannot copy from</response>
                    <response>%cmd.sePrompt%</response>
                </interaction>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout %disc.sessionTerminationTime%</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <interaction>
                    <!-- log out of the supervisor engine -->
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>exit</command>
                    <response>%prompt%</response>
                </interaction>
                <assert condition="-NOT- (-EXISTS- cmd.connectionFail)"
                    key="assert.imageSave.tftpConnection.error" onFailure="abort"/>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- copy net to image -->
            <guid>905E3CF3-2DAE-2FBE-D466-B933FB675F5D</guid>
            <assert condition="-EXISTS- disc.imageFilesystem"
                key="assert.imageSave.imageFileSystem.notDiscovered.error" onFailure="abort"/>
            <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystem%"/>
                <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                    <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystemOnMsfcSupervisorEngine%"/>
                </condition>
            </condition>
            <condition test="-EXISTS- targetImageFilesystem">
                <assign property="cmd.imageLoadLocation" value="%targetImageFilesystem%"/>
            </condition>
            <condition test="-NOT- -EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <!-- pre-copy error checks -->
                <condition test="%transferMode% -EQ- tftp">
                    <assert condition="%disc.version% -GE- 10.3"
                        key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                </condition>
                <condition test="%transferMode% -EQ- ftp">
                    <assert condition="%disc.version% -GE- 12.0"
                        key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                </condition>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <!-- enter config mode, disable session timeout to ensure
                         image file transfer doesn't timeout. Warning:
                         most IOS's will change the prompt to "(config-line)"
                         but ran into one (12.0(5.2)XU, C2900XL-C3H2S-M) that
                         changed it to "(config-)". -->
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>config term</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>line %disc.sessionVtyLine%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>exec-timeout 0 0</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>end</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <condition test="%transferMode% -EQ- tftp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image load -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command>copy tftp: %cmd.imageLoadLocation%:</command>
                            <response property="cmd.address">Address or name of remote host</response>
                            <response property="cmd.source">ource file</response>
                            <response property="cmd.terminate">This process will accept the copy options and then terminate</response>
                            <!-- cmd.terminate for old models (e.g. 2500)? -->
                            <!-- cmd.address for IOS 11 and earlier? -->
                            <!-- cmd.source for IOS 12 and later -->
                            <response property="cmd.invalidInput">mbiguous command</response>
                            <response property="cmd.invalidInput">Invalid input</response>
                            <response property="cmd.invalidInput">Invalid flash</response>
                            <response property="cmd.copyFailed">imed out</response>
                        </interaction>
                        <condition test="-EXISTS- cmd.invalidInput">
                            <interaction>
                                <!-- Some versions of IOS (like 2501) do not
                                     like a colon after %cmd.imageLoadLocation% -->
                                <prompt>%prompt%</prompt>
                                <command>copy tftp %cmd.imageLoadLocation%</command>
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.source">ource file</response>
                                <response property="cmd.terminate">This process will accept the copy options and then terminate</response>
                                <response property="cmd.invalidInput2">mbiguous command</response>
                                <response property="cmd.invalidInput2">Invalid input</response>
                                <response property="cmd.invalidInput2">Invalid flash</response>
                                <response property="cmd.copyFailed">imed out</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.invalidInput2">
                            <interaction>
                                <!-- try one more: no colon after tftp -->
                                <prompt>%prompt%</prompt>
                                <command>copy tftp %cmd.imageLoadLocation%:</command>
                                <response property="cmd.address">Address or name of remote host</response>
                                <response property="cmd.source">ource file</response>
                                <response property="cmd.terminate">This process will accept the copy options and then terminate</response>
                                <response property="cmd.copyFailed">imed out</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.terminate">
                            <interaction>
                                <prompt>confirm</prompt>
                                <command omitEOL="true">y</command>
                                <response>Address or name of remote host</response>
                            </interaction>
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>ource file</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                            <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                <interaction>
                                    <prompt>ource file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>estination file</response>
                                </interaction>
                                <interaction>
                                    <prompt>estination file</prompt>
                                    <command>%transferAlias%</command>
                                    <response property="cmd.badFile">not a valid executable</response>
                                    <response property="cmd.overwrite">Do you want to over write</response>
                                    <response>Erase %cmd.imageLoadLocation%</response>
                                    <!-- 12.0.8b on 2501 omits OK response here -->
                                </interaction>
                                <condition test="-EXISTS- cmd.overwrite">
                                    <interaction>
                                    <prompt>Do you want to over write</prompt>
                                    <command omitEOL="true">y</command>
                                    <response>Erase %cmd.imageLoadLocation%</response>
                                    <!-- 12.0.8b on 2501 omits OK response here -->
                                    </interaction>
                                </condition>
                                <condition test="-EXISTS- cmd.badFile">
                                    <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                    </interaction>
                                    <assign property="cmd.copyFailed" value="true"/>
                                </condition>
                                <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                    <interaction disconnect="sometimes"
                                    reconnectTimeoutSeconds="%rebootTimeoutSeconds% -PLUS- %maxBinaryTransferDurationSeconds% -PLUS- 120" timeoutSeconds="%disconnectTimeoutSeconds%">
                                    <prompt>Erase %cmd.imageLoadLocation%</prompt>
                                    <command omitEOL="true">%eraseFilesystem%</command>
                                    <response property="cmd.confirm">Are you sure you want to erase</response>
                                    <response property="cmd.modified">System configuration has been modified</response>
                                    <response>Copy '%transferFilename%' from server</response>
                                    <response property="cmd.badFile">not a valid executable</response>
                                    <!-- 12.0.8b on 2501 disconnects right here -->
                                    <!-- reboot sleep covers erase+load+reboot -->
                                    </interaction>
                                </condition>
                                <condition test="-EXISTS- cmd.confirm">
                                    <interaction>
                                    <prompt>Are you sure you want to erase</prompt>
                                    <command omitEOL="true">%eraseFilesystem%</command>
                                    <response property="cmd.modified">System configuration has been modified</response>
                                    <response>Copy '%transferFilename%' from server</response>
                                    <response property="cmd.badFile">not a valid executable</response>
                                    </interaction>
                                </condition>
                                <condition test="-EXISTS- cmd.modified">
                                    <interaction>
                                    <prompt>System configuration has been modified</prompt>
                                    <command>n</command>
                                    <response>Copy '%transferFilename%' from server</response>
                                    </interaction>
                                </condition>
                                <condition test="-EXISTS- cmd.badFile">
                                    <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                    </interaction>
                                    <assign property="cmd.copyFailed" value="true"/>
                                </condition>
                                <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                    <interaction disconnect="always"
                                    reconnectTimeoutSeconds="%rebootTimeoutSeconds% -PLUS- %maxBinaryTransferDurationSeconds% -PLUS- 120" timeoutSeconds="%disconnectTimeoutSeconds%">
                                    <prompt>Copy '%transferFilename%' from server</prompt>
                                    <command>y</command>
                                    </interaction>
                                    <!-- reboot sleep covers erase+load+reboot -->
                                </condition>
                            </condition>
                        </condition>
                        <condition test="-EXISTS- cmd.address">
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>ource file</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                            <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                <interaction>
                                    <prompt>ource file</prompt>
                                    <command>%transferFilename%</command>
                                    <response>estination file</response>
                                </interaction>
                                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                    <prompt>estination file</prompt>
                                    <command>%transferAlias%</command>
                                    <response property="cmd.badFile">not a valid executable</response>
                                    <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                    <response property="cmd.overwrite">Do you want to over write</response>
                                    <response property="cmd.password">assword:</response>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">file not found</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">imed out</response>
                                    <response property="cmd.copyFailed">Not enough space</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                </interaction>
                                <!-- for some filesystems like disk0, no erase prompt
                                     is shown, image load is started straight away-->
                                <condition test="-EXISTS- cmd.badFile">
                                    <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                    </interaction>
                                    <assign property="cmd.copyFailed" value="true"/>
                                </condition>
                            </condition>
                        </condition>
                        <condition test="(-EXISTS- cmd.source) -AND- (-NOT- -EXISTS- cmd.copyFailed)">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%transferFilename%</command>
                                <response property="cmd.confirmCopy">? [confirm]</response>
                                <response>Address or name of remote host</response>
                            </interaction>
                            <condition test="-EXISTS- cmd.confirmCopy">
                                <interaction>
                                    <prompt>? [confirm]</prompt>
                                    <command omitEOL="true">y</command>
                                    <response>Address or name of remote host</response>
                                </interaction>
                            </condition>
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>estination file</response>
                                <response property="cmd.copyFailed">Bad address or host name</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                            <condition test="-NOT- -EXISTS- cmd.copyFailed">
                                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                    <prompt>estination file</prompt>
                                    <command>%transferAlias%</command>
                                    <response property="cmd.badFile">not a valid executable</response>
                                    <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                    <response property="cmd.overwrite">Do you want to over write</response>
                                    <response>bytes copied</response>
                                    <response property="cmd.copyFailed">Device or resource busy</response>
                                    <response property="cmd.copyFailed">memory is in use</response>
                                    <response property="cmd.copyFailed">file not found</response>
                                    <response property="cmd.copyFailed">TFTP timeout</response>
                                    <response property="cmd.copyFailed">imed out</response>
                                    <response property="cmd.copyFailed">Not enough space</response>
                                    <response property="cmd.copyFailed">Error reading</response>
                                </interaction>
                                <condition test="-EXISTS- cmd.badFile">
                                    <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                    </interaction>
                                    <assign property="cmd.copyFailed" value="true"/>
                                </condition>
                            </condition>
                        </condition>
                        <condition test="-EXISTS- cmd.overwrite">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Do you want to over write</prompt>
                                <command omitEOL="true">y</command>
                                <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                <response property="cmd.password">assword:</response>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">TFTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.needsErasePrompt">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Erase %cmd.imageLoadLocation%</prompt>
                                <command omitEOL="true">%eraseFilesystem%</command>
                                <response property="cmd.eraseFlash">Continue</response>
                                <response>bytes copied</response>
                                <response property="cmd.confirm2">Are you sure you want to erase</response>
                                <response property="cmd.confirm3">Invalidate existing copy</response>
                                <response property="cmd.confirm4">Copy '%transferFilename%' from server</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">TFTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <!-- if you say no to Erase flash then load may start immediately,
                             if you say yes then Continue prompt comes-->
                        <condition test="-EXISTS- cmd.eraseFlash">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Continue</prompt>
                                <command omitEOL="true">y</command>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">TFTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.confirm2">
                            <!-- 3600 series running IOS 11.2 hits this path -->
                            <interaction>
                                <prompt>Are you sure you want to erase</prompt>
                                <command omitEOL="true">%eraseFilesystem%</command>
                                <response property="cmd.confirm4">Copy '%transferFilename%' from server</response>
                                <response property="cmd.badFile">not a valid executable</response>
                            </interaction>
                            <condition test="-EXISTS- cmd.badFile">
                                <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                </interaction>
                                <assign property="cmd.copyFailed" value="true"/>
                            </condition>
                        </condition>
                        <condition test="-EXISTS- cmd.confirm3">
                            <!-- 3600 series running IOS 11.2 hits this path -->
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Invalidate existing copy</prompt>
                                <command>y</command>
                                <response>bytes copied</response>
                                <response>device copy took</response>
                                <response property="cmd.confirm4">Copy '%transferFilename%' from server</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">TFTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.confirm4">
                            <!-- 3600 series running IOS 11.2 hits this path -->
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Copy '%transferFilename%' from server</prompt>
                                <command>y</command>
                                <response>bytes copied</response>
                                <response>device copy took</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">TFTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image load -->
                        <interaction regex="true" timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>\Q%prompt%\E</prompt>
                            <command>archive download-sw /overwrite tftp://%address%/%transferFilename%</command>
                            <response>Configuring system to use new image.*done</response>
                            <response>All software images installed</response>
                            <response property="cmd.copyFailed">ERROR</response>
                        </interaction>
                    </condition>
                </condition>
                <condition test="%transferMode% -EQ- ftp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image load -->
                        <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>%prompt%</prompt>
                            <command sensitive="true" sensitivePhrase="%ftpPassword%">copy ftp://%ftpUsername%:%ftpPassword%@%address% %cmd.imageLoadLocation%:</command>
                            <response>ource file</response>
                            <response property="cmd.address">Address or name of remote host</response>
                            <response property="cmd.copyFailed">Invalid host address or name</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                        <condition test="-EXISTS- cmd.address">
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response>ource file</response>
                                <response property="cmd.copyFailed">Invalid host address or name</response>
                            </interaction>
                        </condition>
                        <condition test="-NOT- -EXISTS- cmd.copyFailed">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%transferFilename%</command>
                                <response>estination file</response>
                            </interaction>
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                                <prompt>estination file</prompt>
                                <command>%transferAlias%</command>
                                <response property="cmd.badFile">not a valid executable</response>
                                <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                <response property="cmd.overwrite">Do you want to over write</response>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">FTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                                <response property="cmd.copyFailed">Error opening</response>
                            </interaction>
                            <!-- devices waits here with message 'Accessing file ...' -->
                            <!-- for some filesystems like disk0, no erase prompt
                                     is shown, image load is started straight away-->
                            <condition test="-EXISTS- cmd.badFile">
                                <interaction>
                                    <prompt>[confirm]</prompt>
                                    <command/>
                                    <response>%prompt%</response>
                                </interaction>
                                <assign property="cmd.copyFailed" value="true"/>
                            </condition>
                        </condition>
                        <condition test="-EXISTS- cmd.overwrite">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Do you want to over write</prompt>
                                <command omitEOL="true">y</command>
                                <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">FTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.needsErasePrompt">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Erase %cmd.imageLoadLocation%</prompt>
                                <command omitEOL="true">%eraseFilesystem%</command>
                                <response property="cmd.eraseFlash">Continue</response>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">FTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.eraseFlash">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>Continue</prompt>
                                <command omitEOL="true">y</command>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">file not found</response>
                                <response property="cmd.copyFailed">FTP timeout</response>
                                <response property="cmd.copyFailed">imed out</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                            </interaction>
                        </condition>
                        <!-- Password value must appear in command url arg? -->
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image load -->
                        <interaction regex="true" timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>\Q%prompt%\E</prompt>
                            <command sensitive="true" sensitivePhrase="%ftpPassword%">archive download-sw /overwrite ftp://%ftpUsername%:%ftpPassword%@%address%/%transferFilename%</command>
                            <response>Configuring system to use new image.*done</response>
                            <response>All software images installed</response>
                            <response property="cmd.copyFailed">ERROR</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                    </condition>
                    <!-- FTP client hangs against linux FTP server (bug #1325). -->
                </condition>
                <condition test="%transferMode% -EQ- scp">
                    <condition test="-NOT- (-EXISTS- imageArchive)">
                        <!-- if imageArchive not set use bin style image load -->
                        <interaction>
                            <prompt>%prompt%</prompt>
                            <command stutterMilliSeconds="50">copy scp://%scpUsername%@%address% %cmd.imageLoadLocation%:</command>
                            <response property="cmd.address">Address or name of remote host</response>
                            <response property="cmd.username">Source username</response>
                            <response>ource file</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                            <!-- cmd.username sometimes appears, other times not -->
                        </interaction>
                        <condition test="-EXISTS- cmd.address">
                            <interaction>
                                <prompt>Address or name of remote host</prompt>
                                <command>%address%</command>
                                <response property="cmd.username">Source username</response>
                                <response>ource file</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.username">
                            <interaction>
                                <prompt>Source username</prompt>
                                <command>%scpUsername%</command>
                                <response>ource file</response>
                            </interaction>
                        </condition>
                        <condition test="-NOT- -EXISTS- cmd.copyFailed">
                            <interaction>
                                <prompt>ource file</prompt>
                                <command>%transferFilename%</command>
                                <response>estination file</response>
                            </interaction>
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>estination file</prompt>
                                <command>%transferAlias%</command>
                                <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                                <response property="cmd.overwrite">Do you want to over write</response>
                                <response>bytes copied</response>
                                <response property="cmd.password">assword:</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">error code</response>
                                <response property="cmd.copyFailed">Error opening</response>
                                <response property="cmd.copyFailed">Error writing</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                                <response property="cmd.copyFailed">imed out</response>
                            </interaction>
                        </condition>
                        <!-- for some filesystems like disk0, no erase prompt
                                 is shown, image load is started straight away-->
                        <!-- for some IOS on Catalyst, get an over write prompt,
                             but then it doesn't ask to erase filesystem -->
                        <condition test="-EXISTS- cmd.overwrite">
                            <interaction>
                                <prompt>Do you want to over write</prompt>
                                <command omitEOL="true">y</command>
                                <response property="cmd.password">assword:</response>
                                <response property="cmd.needsErasePrompt">Erase %cmd.imageLoadLocation%</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.needsErasePrompt">
                            <interaction>
                                <prompt>Erase %cmd.imageLoadLocation%</prompt>
                                <command omitEOL="true">%eraseFilesystem%</command>
                                <response property="cmd.password">assword:</response>
                                <response property="cmd.eraseFlash">Continue</response>
                            </interaction>
                        </condition>
                        <condition test="-EXISTS- cmd.eraseFlash">
                            <interaction>
                                <prompt>Continue</prompt>
                                <command omitEOL="true">y</command>
                                <response property="cmd.password">assword:</response>
                            </interaction>
                        </condition>
                        <condition test="(-EXISTS- cmd.password) -AND- (-NOT- -EXISTS- cmd.copyFailed)">
                            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                                <prompt>assword:</prompt>
                                <command sensitive="true">%scpPassword%</command>
                                <response>bytes copied</response>
                                <response property="cmd.copyFailed">Device or resource busy</response>
                                <response property="cmd.copyFailed">memory is in use</response>
                                <response property="cmd.copyFailed">error code</response>
                                <response property="cmd.copyFailed">Error opening</response>
                                <response property="cmd.copyFailed">Error writing</response>
                                <response property="cmd.copyFailed">Not enough space</response>
                                <response property="cmd.copyFailed">Error reading</response>
                                <response property="cmd.copyFailed">imed out</response>
                            </interaction>
                        </condition>
                    </condition>
                    <condition test="-EXISTS- imageArchive">
                        <!-- if imageArchive is set use tar style image load -->
                        <interaction regex="true" timeoutSeconds="%maxBinaryTransferDurationSeconds% -PLUS- 120">
                            <prompt>\Q%prompt%\E</prompt>
                            <command sensitive="true" sensitivePhrase="%scpPassword%">archive download-sw /overwrite scp://%scpUsername%:%scpPassword%@%address%/%transferFilename%</command>
                            <response>Configuring system to use new image.*done</response>
                            <response>All software images installed</response>
                            <response property="cmd.copyFailed">ERROR</response>
                            <response property="cmd.copyFailed">Invalid input</response>
                        </interaction>
                    </condition>
                </condition>
                <!-- archive load: old image automatically deleted as needed -->
                <!-- archive load: new img automatically exploded within device -->
                <!-- archive load: 2 mins added to timeout to explode new image -->
                <!-- archive load: new img automatically declared as boot image -->
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <!-- enter config mode, restore original session timeout -->
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>config term</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>line %disc.sessionVtyLine%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>exec-timeout %disc.sessionTerminationTime% %disc.sessionTerminationTimeSeconds%</command>
                        <response>(conf</response>
                    </interaction>
                    <interaction>
                        <prompt>(conf</prompt>
                        <command>end</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <assert condition="-NOT- (-EXISTS- cmd.copyFailed)"
                    key="assert.imageLoad.filetransfer.error" onFailure="abort"/>
            </condition>
            <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <interaction regex="true">
                    <!-- switch over to the supervisor engine; assumed to
                         be running in slot 1 -->
                    <prompt>\Q%prompt%\E</prompt>
                    <command>session slot 1 processor 1</command>
                    <response>([Uu]ser.*:|[Ll]ogin.*:)</response>
                </interaction>
                <!-- assuming we must supply username, password, and
                     priv password, and that these are the same on the
                     MSFC and the supervisor engine. -->
                <interaction regex="true">
                    <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                    <command>%username%</command>
                    <response>[Pp]assword:</response>
                    <error>([Uu]ser.*:|[Ll]ogin.*:)</error>
                </interaction>
                <interaction regex="true">
                    <prompt>[Pp]assword:</prompt>
                    <command sensitive="true">%password%</command>
                    <pauseSeconds>1</pauseSeconds>
                    <response>&gt;</response>
                    <error>([Pp]assword:|Authentication failed)</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <command>enable</command>
                    <response>assword:</response>
                </interaction>
                <interaction>
                    <prompt>assword:</prompt>
                    <command sensitive="true">%privPassword%</command>
                    <response>(enable)</response>
                    <error>Sorry</error>
                    <error>assword:</error>
                    <error>Rejected</error>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command>set logging session disable</command>
                    <pauseSeconds>3</pauseSeconds>
                    <response>(enable)</response>
                </interaction>
                <interaction>
                    <prompt>(enable)</prompt>
                    <command/>
                    <capture>
                        <property name="cmd.sePrompt"/>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>set length 0</command>
                    <response>Screen length for this session set to 0</response>
                </interaction>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout 0</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>copy tftp:%transferFilename% %cmd.imageLoadLocation%:%transferAlias%</command>
                    <response>IP address or name of remote host</response>
                </interaction>
                <interaction>
                    <prompt>IP address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>proceed</response>
                    <response property="cmd.overwriteImage">verwrite image file</response>
                    <response property="cmd.overwriteImage">verwrite it</response>
                    <response property="cmd.connectionFail">connection fail</response>
                </interaction>
                <condition test="(-EXISTS- cmd.connectionFail) -AND- (-EXISTS- disc.sessionTerminationTime)">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout %disc.sessionTerminationTime%</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.connectionFail">
                    <interaction>
                        <!-- log out of the supervisor engine -->
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>exit</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <assert condition="-NOT- (-EXISTS- cmd.connectionFail)"
                    key="assert.imageLoad.tftpConnection.error" onFailure="abort"/>
                <condition test="-EXISTS- cmd.overwriteImage">
                    <interaction>
                        <prompt>verwrite</prompt>
                        <command>y</command>
                        <response>proceed</response>
                    </interaction>
                </condition>
                <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                    <prompt>proceed</prompt>
                    <command>y</command>
                    <response>copied successfully</response>
                    <response property="cmd.tftpFailed">TFTP failed</response>
                    <response property="cmd.tftpFailed">TFTP connection fail</response>
                    <response property="cmd.tftpFailed">Failed to copy</response>
                    <response property="cmd.tftpFailed">Cannot copy from</response>
                </interaction>
                <condition test="-EXISTS- disc.sessionTerminationTime">
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set logout %disc.sessionTerminationTime%</command>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                </condition>
                <interaction>
                    <!-- log out of the supervisor engine -->
                    <prompt>%cmd.sePrompt%</prompt>
                    <command>exit</command>
                    <response>%prompt%</response>
                </interaction>
                <assert condition="-NOT- (-EXISTS- cmd.tftpFailed)"
                    key="assert.imageLoad.tftp.failed" onFailure="abort"/>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- declare image -->
            <guid>A11600D7-30A0-4378-6B50-A7449E2AAE9A</guid>
            <condition test="-NOT- (-EXISTS- imageArchive)">
                <!-- declaration unnec when performing archive image loads -->
                <assert condition="-EXISTS- disc.imageFilesystem"
                    key="assert.imageFileSystem.location.notDiscovered" onFailure="abort"/>
                <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                    <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystem%"/>
                </condition>
                <condition test="-EXISTS- targetImageFilesystem">
                    <assign property="cmd.imageLoadLocation" value="%targetImageFilesystem%"/>
                </condition>
                <!-- ****************************************************** -->
                <!-- logic to add new image declaration (see bug 4837)      -->
                <!-- logic to preserve unrelated boot system cmds (DE7299)  -->
                <!-- ****************************************************** -->
                <condition test="-NOT- -EXISTS- unwindImageDeclaration">
                    <!-- try capturing existing boot lists via "show        -->
                    <!-- running" into bootList.* (output could involve     -->
                    <!-- multiple lines)                                    -->
                    <assign property="bootFromFlash" value=""/>
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show running-config | include boot system</command>
                        <response property="cmd.retryShow">nvalid input detected</response>
                        <response>%prompt%</response>
                        <capture buffer="boot system (.+)"
                            ignoreFailure="true" multipleValues="true">
                            <property name="bootList">{1}</property>
                        </capture>
                        <capture
                            buffer="boot system flash .*%disc.imageFilesystem%:/?%disc.imageFilename%" ignoreFailure="true">
                            <property name="bootFromFlash">flash</property>
                            <!-- flag that current image used the extra "flash"
                                 argument, so we know to use "flash" on the new
                                 image line; name needs to be un-prefixeg so
                                 the prop stays around in case it's needed to
                                 unwind a failed load. -->
                        </capture>
                        <capture
                            buffer="boot system flash .*%cmd.imageLoadLocation%:/?%transferAlias%" ignoreFailure="true">
                            <property name="bootFromFlash">flash</property>
                            <!-- if new image already declared as using flash,
                                 make sure updated declaration also does -->
                        </capture>
                    </interaction>
                    <condition test="-EXISTS- cmd.retryShow">
                        <!-- IOS 11 does not support piping to "include", so
                        we will have to just show the entire running config.
                        This block is identical to the above except for the
                        piping part. -->
                        <interaction>
                            <command>show running-config</command>
                            <response>%prompt%</response>
                            <capture buffer="boot system (.+)"
                                ignoreFailure="true" multipleValues="true">
                                <property name="bootList">{1}</property>
                            </capture>
                            <capture
                                buffer="boot system flash .*%disc.imageFilesystem%:/?%disc.imageFilename%" ignoreFailure="true">
                                <property name="bootFromFlash">flash</property>
                            </capture>
                            <capture
                                buffer="boot system flash .*%cmd.imageLoadLocation%:/?%transferAlias%" ignoreFailure="true">
                                <property name="bootFromFlash">flash</property>
                            </capture>
                        </interaction>
                    </condition>
                    <interaction>
                        <command>configure terminal</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <loop input="bootList" variable="i">
                        <!-- drop existing boot image lines -->
                        <interaction>
                            <prompt>(conf</prompt>
                            <command>no boot system %loop.i%</command>
                            <response>(conf</response>
                        </interaction>
                    </loop>
                    <interaction>
                        <!-- install the new boot image line first -->
                        <prompt>(conf</prompt>
                        <command>boot system %bootFromFlash% %cmd.imageLoadLocation%:%transferAlias%</command>
                        <response>(conf</response>
                    </interaction>
                    <!-- add all other boot lines -->
                    <loop input="bootList" variable="i">
                        <assign property="cmd.bootLine" value="%loop.i%"/>
                        <!-- look for declaration of deleted image (with and
                        without a slash in the path); we don't want this
                        declaration to be included in the resulting boot image
                        lines, but we do need any other images on the same
                        command line. -->
                        <condition test="(-EXISTS- disc.imageFilename) -AND- (-EXISTS- imageWasDeleted)">
                            <assign property="cmd.bootLine">
                                import com.bmc.bcan.agent.shared.imported.network.devices.DeviceSpecificUtils;
                                String value = DeviceSpecificUtils.pruneIosBootString(
                                    "%loop.i%",
                                    "%disc.imageFilesystem%:%disc.imageFilename%");
                                value = DeviceSpecificUtils.pruneIosBootString(
                                    value,
                                    "%disc.imageFilesystem%:/%disc.imageFilename%");
                            </assign>
                        </condition>
                        <!-- look for declaration of the new image (with and
                        without a slash in the path); we don't want this
                        declaration to be included twice in the resulting boot
                        image lines, but we do need any other images on the
                        same command line. -->
                        <assign property="cmd.bootLine">
                            import com.bmc.bcan.agent.shared.imported.network.devices.DeviceSpecificUtils;
                            String value = DeviceSpecificUtils.pruneIosBootString(
                                "%cmd.bootLine%",
                                "%cmd.imageLoadLocation%:%transferAlias%");
                            value = DeviceSpecificUtils.pruneIosBootString(
                                value,
                                "%cmd.imageLoadLocation%:/%transferAlias%");
                        </assign>
                        <condition test="-NOT- (%cmd.bootLine% -EQ- %empty%)">
                            <interaction>
                                <prompt>(conf</prompt>
                                <command>boot system %cmd.bootLine%</command>
                                <response>(conf</response>
                            </interaction>
                        </condition>
                    </loop>
                </condition>
                <!-- ****************************************************** -->
                <!-- logic to undo new image declaration (see bug 4837)     -->
                <!-- ****************************************************** -->
                <condition test="-EXISTS- unwindImageDeclaration">
                    <!-- get and drop all the current boot image lines -->
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show running-config | include boot system</command>
                        <response property="cmd.retryShow2">nvalid input detected</response>
                        <response>%prompt%</response>
                        <capture buffer="boot system (.+)"
                            ignoreFailure="true" multipleValues="true">
                            <property name="cmd.bootListRewind">{1}</property>
                        </capture>
                    </interaction>
                    <condition test="-EXISTS- cmd.retryShow2">
                        <!-- IOS 11 does not support piping to include -->
                        <interaction>
                            <command>show running-config</command>
                            <response>%prompt%</response>
                            <capture buffer="boot system (.+)"
                                ignoreFailure="true" multipleValues="true">
                                <property name="cmd.bootListRewind">{1}</property>
                            </capture>
                        </interaction>
                    </condition>
                    <interaction>
                        <command>configure terminal</command>
                        <response>(config)</response>
                        <response>(confi)</response>
                        <response>(conf)</response>
                    </interaction>
                    <loop input="cmd.bootListRewind" variable="i">
                        <!-- drop each current boot line -->
                        <interaction>
                            <prompt>(conf</prompt>
                            <command>no boot system %loop.i%</command>
                            <response>(conf</response>
                        </interaction>
                    </loop>
                    <!-- restore original boot lists (could involve multiple -->
                    <!-- lines)                                              -->
                    <loop input="bootList" variable="i">
                        <interaction>
                            <prompt>(conf</prompt>
                            <command>boot system %loop.i%</command>
                            <response>(conf</response>
                        </interaction>
                    </loop>
                </condition>
                <interaction>
                    <!-- get out of config mode -->
                    <prompt>(conf</prompt>
                    <command>end</command>
                    <response>%prompt%</response>
                </interaction>
                <!-- copy running to startup required after declaring image -->
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- delete image -->
            <guid>B1B1198E-FF0E-7791-D77C-32901BC11901</guid>
            <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystem%"/>
                <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                    <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystemOnMsfcSupervisorEngine%"/>
                </condition>
            </condition>
            <condition test="-EXISTS- targetImageFilesystem">
                <assign property="cmd.imageLoadLocation" value="%targetImageFilesystem%"/>
            </condition>
            <condition test="-NOT- -EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>delete %cmd.imageLoadLocation%:</command>
                    <response>Delete filename []?</response>
                    <response property="cmd.deleteNotSupported">nvalid input</response>
                    <error>rror</error>
                    <!-- some IOS versions don't support image deletion, for these skip
                         the delete process and erase the filesystem -->
                </interaction>
                <assert
                    condition="-NOT- (-EXISTS- cmd.deleteNotSupported)"
                    key="assert.osImage.deletion.notSupported" onFailure="skip"/>
                <interaction>
                    <prompt>Delete filename []?</prompt>
                    <command>%transferAlias%</command>
                    <response>Delete %cmd.imageLoadLocation%:%transferAlias%? [confirm]</response>
                </interaction>
                <interaction>
                    <prompt>Delete %cmd.imageLoadLocation%:%transferAlias%? [confirm]</prompt>
                    <command omitEOL="true">y</command>
                    <response property="cmd.readOnly">Device is read-only</response>
                    <!-- device is in read-only mode, device must be in read-write
                         mode for deleting the image, in this case we erase the
                         filesystem -->
                    <response>%prompt%</response>
                </interaction>
                <assert condition="-NOT- (-EXISTS- cmd.readOnly)"
                    key="assert.osImage.flash.readonly" onFailure="skip"/>
                <!-- abort the process if the system is in read-only mode -->
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>squeeze %cmd.imageLoadLocation%:</command>
                    <response property="cmd.continueSqueeze1">? [confirm]</response>
                    <response property="cmd.squeezeNotSupported">nvalid input</response>
                    <response>nknown command</response>
                </interaction>
                <assert
                    condition="-NOT- (-EXISTS- cmd.squeezeNotSupported)"
                    key="assert.squeeze.notSupported" onFailure="skip"/>
                <condition test="-EXISTS- cmd.continueSqueeze1">
                    <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                        <prompt>? [confirm]</prompt>
                        <command omitEOL="true">y</command>
                        <response property="cmd.continueSqueeze2">? [confirm]</response>
                        <response property="cmd.squeezeError">rror</response>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.continueSqueeze2">
                    <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                        <prompt>? [confirm]</prompt>
                        <command omitEOL="true">y</command>
                        <response property="cmd.squeezeError">rror</response>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
                <!-- @todo Ignoring this error for the time being. See bug #3101.
                <assert condition="-NOT- (-EXISTS- cmd.squeezeError)" onFailure="abort">
                    Error running squeeze command on this device.
                </assert>
                -->
                <!-- squeeze has to be done after marking image for deletion -->
                <!-- devices that do not support squeeze will just ignore the
                     command -->
                <!-- for 1760 type of devices squeeze sometimes takes long
                     time -->
            </condition>
            <condition test="-EXISTS- disc.imageFilesystemOnMsfcSupervisorEngine">
                <condition test="-EXISTS- disc.imageFilename">
                    <!-- delete could happen before and/or after load, so we
                         may or may not already be logged in to supervisor
                         engine. -->
                    <interaction regex="true">
                        <!-- switch over to the supervisor engine; assumed to
                             be running in slot 1 -->
                        <prompt>\Q%prompt%\E</prompt>
                        <command>session slot 1 processor 1</command>
                        <response>([Uu]ser.*:|[Ll]ogin.*:)</response>
                    </interaction>
                    <!-- assuming we must supply username, password, and
                         priv password, and that these are the same on the
                         MSFC and the supervisor engine. -->
                    <interaction regex="true">
                        <prompt>([Uu]ser.*:|[Ll]ogin.*:)</prompt>
                        <command>%username%</command>
                        <response>[Pp]assword:</response>
                        <error>([Uu]ser.*:|[Ll]ogin.*:)</error>
                    </interaction>
                    <interaction regex="true">
                        <prompt>[Pp]assword:</prompt>
                        <command sensitive="true">%password%</command>
                        <pauseSeconds>1</pauseSeconds>
                        <response>&gt;</response>
                        <error>([Pp]assword:|Authentication failed)</error>
                        <error>Rejected</error>
                    </interaction>
                    <interaction>
                        <command>enable</command>
                        <response>assword:</response>
                    </interaction>
                    <interaction>
                        <prompt>assword:</prompt>
                        <command sensitive="true">%privPassword%</command>
                        <response>(enable)</response>
                        <error>Sorry</error>
                        <error>assword:</error>
                        <error>Rejected</error>
                    </interaction>
                    <interaction>
                        <prompt>(enable)</prompt>
                        <command>set logging session disable</command>
                        <pauseSeconds>3</pauseSeconds>
                        <response>(enable)</response>
                    </interaction>
                    <interaction>
                        <prompt>(enable)</prompt>
                        <command/>
                        <capture>
                            <property name="cmd.sePrompt"/>
                        </capture>
                    </interaction>
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>set length 0</command>
                        <response>Screen length for this session set to 0</response>
                    </interaction>
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>delete %cmd.imageLoadLocation%:%transferAlias%</command>
                        <response property="cmd.confirm">Delete image file</response>
                        <response>%cmd.sePrompt%</response>
                    </interaction>
                    <condition test="-EXISTS- cmd.confirm">
                        <interaction>
                            <prompt>Delete image file</prompt>
                            <command>y</command>
                            <response>%cmd.sePrompt%</response>
                        </interaction>
                    </condition>
                    <interaction>
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>squeeze %cmd.imageLoadLocation%:</command>
                        <response property="cmd.continueSqueeze">proceed</response>
                        <response>%cmd.sePrompt%</response>
                        <error>unknown device</error>
                        <error retry="true">Try again later</error>
                    </interaction>
                    <condition test="-EXISTS- cmd.continueSqueeze">
                        <interaction>
                            <prompt>proceed</prompt>
                            <command>y</command>
                            <response>proceed</response>
                        </interaction>
                        <interaction timeoutSeconds="%squeezeTimeoutSeconds%">
                            <prompt>proceed</prompt>
                            <command>y</command>
                            <response>%cmd.sePrompt%</response>
                        </interaction>
                    </condition>
                    <interaction>
                        <!-- log out of the supervisor engine -->
                        <prompt>%cmd.sePrompt%</prompt>
                        <command>exit</command>
                        <response>%prompt%</response>
                    </interaction>
                </condition>
            </condition>
            <!-- flag that image has been deleted (either it was already   -->
            <!-- gone or the above commands did it), used in declare-image -->
            <assign property="imageWasDeleted" value="true"/>
        </deviceCommand>
        <deviceCommand>
            <!-- activate image -->
            <guid>C86240C6-54EF-F268-6242-BDC42F74E7C8</guid>
        </deviceCommand>
        <deviceCommand>
            <!-- reboot -->
            <guid>0DD240D0-5C2E-C943-CBE9-88E2E58F9454</guid>
            <interaction>
                <prompt>%prompt%</prompt>
                <command>reload</command>
            </interaction>
            <condition test="-EXISTS- saveChoice">
                <interaction optional="true">
                    <prompt>System configuration has been modified</prompt>
                    <command>%saveChoice%</command>
                    <response>Proceed with reload</response>
                </interaction>
            </condition>
            <interaction disconnect="always" timeoutSeconds="%disconnectTimeoutSeconds%">
                <prompt>Proceed with reload</prompt>
                <command>y</command>
                <pauseSeconds>1</pauseSeconds>
                <error>%prompt%</error>
            </interaction>
        </deviceCommand>
        <deviceCommand>
            <!-- logout -->
            <guid>E6C631FC-33CA-812E-55D5-6CF772428705</guid>
            <interaction>
                <!-- send CTRL-C to kill whatever we might be in the middle of -->
                <command omitEOL="true">\x003</command>
                <response>(conf</response>
                <response property="cmd.gotPrompt">%prompt%</response>
            </interaction>
            <condition test="-NOT- (-EXISTS- cmd.gotPrompt)">
                <interaction>
                    <!-- Exit configuration mode -->
                    <prompt>(conf</prompt>
                    <command>end</command>
                    <response>%prompt%</response>
                </interaction>
            </condition>
            <condition test="(-EXISTS- disc.sessionTerminationTime) -AND- (-EXISTS- disc.sessionVtyLine)">
                <!-- make sure session timeout is restored, in case an
                     image save/load errored out unexpectedly -->
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>config term</command>
                    <response>(config)</response>
                    <response>(confi)</response>
                    <response>(conf)</response>
                </interaction>
                <interaction>
                    <prompt>(conf</prompt>
                    <command>line %disc.sessionVtyLine%</command>
                    <response>(conf</response>
                </interaction>
                <interaction>
                    <prompt>(conf</prompt>
                    <command>exec-timeout %disc.sessionTerminationTime% %disc.sessionTerminationTimeSeconds%</command>
                    <response>(conf</response>
                </interaction>
                <interaction>
                    <prompt>(conf</prompt>
                    <command>end</command>
                    <response>%prompt%</response>
                </interaction>
            </condition>
            <condition test="-NOT- (-EXISTS- managedBySerial)">
                <interaction disconnect="sometimes" timeoutSeconds="%disconnectTimeoutSeconds%">
                    <prompt>%prompt%</prompt>
                    <command>exit</command>
                    <response property="cmd.hasOpenConnections">(You have open connections) [confirm]</response>
                </interaction>
                <condition test="-EXISTS- cmd.hasOpenConnections">
                    <interaction disconnect="always" timeoutSeconds="%disconnectTimeoutSeconds%">
                        <command>y</command>
                    </interaction>
                </condition>
            </condition>
            <condition test="-EXISTS- managedBySerial">
                <condition test="-EXISTS- consoleLoggingLevel">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>configure terminal</command>
                    </interaction>
                    <interaction>
                        <command>logging console %consoleLoggingLevel%</command>
                    </interaction>
                    <interaction>
                        <command>exit</command>
                    </interaction>
                    <!-- Enable syslogging that was disabled in the login
                         interactions -->
                </condition>
                <interaction disconnect="sometimes" timeoutSeconds="%disconnectTimeoutSeconds%">
                    <prompt>%prompt%</prompt>
                    <command>exit</command>
                    <response property="cmd.needsBreakSignal">RETURN to get started</response>
                    <response property="cmd.hasOpenConnections">(You have open connections) [confirm]</response>
                </interaction>
                <condition test="-EXISTS- cmd.hasOpenConnections">
                    <interaction disconnect="sometimes" timeoutSeconds="%disconnectTimeoutSeconds%">
                        <command>y</command>
                        <response property="cmd.needsBreakSignal">RETURN to get started</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.needsBreakSignal">
                    <interaction disconnect="always" timeoutSeconds="%disconnectTimeoutSeconds%">
                        <command>~.</command>
                    </interaction>
                </condition>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- syntax scan -->
            <guid>0F008DB4-DCDB-FE9E-BE50-24A86F88FBE2</guid>
            <!-- Enter config mode; then for each command, add a " ?"; the cmd
                 is good when the response includes a <cr> string. Cmd is
                 erased with CTRL-U. At end, exit config mode. Prompt changes
                 in different blk modes, so use the constant portion of it.
                 CTRL-C must be converted, since otherwise it gets interpreted
                 as an interrupt and pops out of config mode. Pause is needed
                 to prevent long responses to be split between 2 cmds. -->
            <interaction>
                <prompt>%prompt%</prompt>
                <command>config term</command>
                <response>(config)</response>
                <response>(confi)</response>
                <response>(conf)</response>
            </interaction>
            <syntaxScanInteraction help=" ?" lineErasure="last"
                replaceCtrlCWith="/" useCtrlU="true">
                <prompt>)#</prompt>
                <command omitEOL="true">unused</command>
                <pauseSeconds>1</pauseSeconds>
                <response>&lt;cr&gt;</response>
                <response property="syntax.error.%lineNumber%">)#</response>
                <capture includeSuffix="true">
                    <property name="syntax.response.%lineNumber%"/>
                </capture>
                <blockEntryError>not configured</blockEntryError>
                <blockEntryError>Unknown routing protocol</blockEntryError>
            </syntaxScanInteraction>
            <interaction>
                <command>end</command>
                <response>%prompt%</response>
            </interaction>
        </deviceCommand>
        <deviceCommand>
            <!-- verify image -->
            <guid>AA954719-1830-4C31-EEA8-F0D9CC7982D9</guid>
            <condition test="-NOT- (-EXISTS- targetImageFilesystem)">
                <assign property="cmd.imageLoadLocation" value="%disc.imageFilesystem%"/>
            </condition>
            <condition test="-EXISTS- targetImageFilesystem">
                <assign property="cmd.imageLoadLocation" value="%targetImageFilesystem%"/>
            </condition>
            <interaction timeoutSeconds="%maxBinaryTransferDurationSeconds%">
                <!-- need longer timeout when an MSFC is verifying image stored on
                     supervisor engine. MSFC tftp's the file from SE. -->
                <prompt>%prompt%</prompt>
                <command>verify /md5 %cmd.imageLoadLocation%:%transferAlias%</command>
                <response property="cmd.verifyError">rror</response>
                <response property="cmd.verifyError">nvalid input</response>
                <response property="useDigest">%prompt%</response>
                <!-- since not all devices return a digest value on running
                    the image verification command so set the useDigest property,
                    this tells us that a digest value will be used for verifying
                    the image -->
                <capture buffer="verify /md5 (.*) = (\S+)" ignoreFailure="true">
                    <property name="imageDigestValue">{2}</property>
                </capture>
            </interaction>
            <!-- invalid input error happens for older IOS devices that
                 do not support verify command -->
            <assert condition="-NOT- (-EXISTS- cmd.verifyError)"
                key="assert.imageVerification.notSupported" onFailure="skip"/>
        </deviceCommand>
        <deviceCommand>
            <!-- get next switch -->
            <guid>FB13C6B2-D973-A0F1-1E46-0AA438834D3E</guid>
            <interaction>
                <prompt>%prompt%</prompt>
                <command>ping %endpointAddress%</command>
                <response>%prompt%</response>
                <!-- ping endpoint to populate mac address table if nec -->
            </interaction>
            <condition test="-NOT- (-EXISTS- endpointMacAddress)">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show ip arp | include %endpointAddress%</command>
                    <response>%prompt%</response>
                    <capture
                        buffer="\s+%endpointAddress%\s*\d*\s*(\S+\.\S+\.\S+)\s+\S+\s+(\p{Alpha}+)(\d+\S*\d*)" ignoreFailure="true">
                        <property name="disc.endpointMacAddress">{1}</property>
                        <property name="disc.endpointPortType">{2}</property>
                        <property name="disc.endpointPortLoc">{3}</property>
                    </capture>
                    <capture
                        buffer="\s+%endpointAddress%\s*-\s*(\S+\.\S+\.\S+)\s+\S+\s+(\p{Alpha}+)(\d+\S*\d*)" ignoreFailure="true">
                        <property name="disc.endpointMacAddress">{1}</property>
                        <property name="disc.endpointPortType">{2}</property>
                        <property name="disc.endpointPortLoc">{3}</property>
                    </capture>
                    <!-- port type might be "Eth", "Vlan", or "Po" -->
                </interaction>
                <assert condition="-EXISTS- disc.endpointMacAddress"
                    key="assert.endpoint.macaddress.discovery.failed" onFailure="abort"/>
                <condition test="%disc.endpointPortType% -EQ- Vlan">
                    <interaction>
                        <prompt>%prompt%</prompt>
                        <command>show mac-address-table</command>
                        <response>%prompt%</response>
                        <capture buffer="%disc.endpointMacAddress%\s+.+\s+(\p{Alpha}+)(\d+/?\d*/?\d*)">
                            <property name="disc.endpointPortType">{1}</property>
                            <property name="disc.endpointPortLoc">{2}</property>
                        </capture>
                        <!-- if type was vlan, capture iface info (bug 5321) -->
                        <!-- don't pipe output thru filter (DE8570) -->
                    </interaction>
                </condition>
                <!-- endpointMacAddress will not be set yet when hopping -->
                <!-- thru the managing router                            -->
            </condition>
            <condition test="-EXISTS- endpointMacAddress">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show mac-address-table</command>
                    <response>%prompt%</response>
                    <capture buffer="%endpointMacAddress%\s+.+\s+(\p{Alpha}+)(\d+/?\d*/?\d*)">
                        <property name="disc.endpointPortType">{1}</property>
                        <property name="disc.endpointPortLoc">{2}</property>
                    </capture>
                    <!-- don't pipe output thru filter (DE8570) -->
                </interaction>
                <!-- endpointMacAddress will be set when hopping thru     -->
                <!-- switches after the managing router                   -->
            </condition>
            <condition test="%disc.endpointPortType% -EQ- Po">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show etherchannel %disc.endpointPortLoc% summary</command>
                    <response>%prompt%</response>
                    <capture buffer="(\p{Alpha}+)(\d+/\d+/?\d*)" multipleValues="true">
                        <property name="disc.endpointPortTypes">{1}</property>
                        <property name="disc.endpointPortLocs">{2}</property>
                    </capture>
                </interaction>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show cdp neighbor detail</command>
                    <response>%prompt%</response>
                    <error>CDP is not enabled</error>
                    <capture
                        buffer="IP address: (\d+\.\d+\.\d+\.\d+)\r?\n.*\r?\nInterface: %capture.endpointPortType%\p{Alpha}*%capture.endpointPortLoc%,"
                        ignoreFailure="true"
                        iterArrays="disc.endpointPortTypes,disc.endpointPortLocs" iterVariables="endpointPortType,endpointPortLoc">
                        <property name="disc.nextSwitchAddress">{1}</property>
                        <!-- attempts property capture multiple times in a  -->
                        <!-- loop until successful (first iteration assigns -->
                        <!-- values from %disc.endpointPortTypes.0% and     -->
                        <!-- %disc.endpointPortLocs.0% to %capture.endpoint -->
                        <!-- PortType% and %capture.endpointPortLoc%) or    -->
                        <!-- attempted capture)                             -->
                    </capture>
                </interaction>
                <!-- endpoint was part of port channel, we execute "show    -->
                <!-- etherchannel" to capture array of port type+loc values,-->
                <!-- then loop through "show cdp" output to find the switch -->
                <!-- connected to the ports in the channel (if any)         -->
            </condition>
            <condition test="-NOT- (%disc.endpointPortType% -EQ- Po)">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show cdp neighbor detail</command>
                    <response>%prompt%</response>
                    <error>CDP is not enabled</error>
                    <capture
                        buffer="IP address: (\d+\.\d+\.\d+\.\d+)\r?\n.*\r?\nInterface: %disc.endpointPortType%\p{Alpha}*%disc.endpointPortLoc%," ignoreFailure="true">
                        <property name="disc.nextSwitchAddress">{1}</property>
                    </capture>
                </interaction>
                <!-- endpoint was not part of port channel, we search       -->
                <!-- through "show cdp" output to find the switch connected -->
                <!-- to the port (if any)                                   -->
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- discover acl details -->
            <guid>CC467978-4675-AEA9-A6D1-95A14D51D656</guid>
            <interaction>
                <prompt>%prompt%</prompt>
                <command>config term</command>
                <response>(conf</response>
            </interaction>
            <interaction>
                <prompt>(conf</prompt>
                <command>vlan access-map ?</command>
                <response property="disc.supportsVlanAcl">Ambiguous</response>
                <response>(conf</response>
                <!-- sets disc.supportsVACL if "vlan access-map" recognized -->
            </interaction>
            <interaction>
                <prompt>(conf</prompt>
                <command>end</command>
                <response>%prompt%</response>
            </interaction>
        </deviceCommand>
        <deviceCommand>
            <!-- backup vlan.dat -->
            <guid>495C7D1D-12B7-47DB-82AF-56DE6B2EA0E3</guid>
            <!-- look for the file in the current directory (which is usually
            flash:), then const_nvram: (for 6500's), then in cat4000_flash:
           (for 4500/4000 series) -->
            <interaction>
                <prompt>%prompt%</prompt>
                <command stutterMilliSeconds="50">dir vlan.dat</command>
                <response property="cmd.haveVlanFile">bytes total</response>
                <response>%prompt%</response>
                <capture buffer="Directory of (\S+)" ignoreFailure="true">
                    <property name="cfgFilename">{1}</property>
                </capture>
                <capture buffer="\s*\d+\s+\S+\s+(\d+)\s+.*vlan.dat" ignoreFailure="true">
                    <property name="cmd.vlanDatSize">{1}</property>
                </capture>
            </interaction>
            <condition test="(-NOT- (-EXISTS- cmd.haveVlanFile)) -AND- (-NOT- (-EXISTS- cmd.vlanDatSize))">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">dir const_nvram:/vlan.dat</command>
                    <response property="cmd.haveVlanFile">bytes total</response>
                    <response>%prompt%</response>
                    <capture buffer="Directory of (\S+)" ignoreFailure="true">
                        <property name="cfgFilename">{1}</property>
                    </capture>
                    <capture buffer="\s*\d+\s+\S+\s+(\d+)\s+.*vlan.dat" ignoreFailure="true">
                        <property name="cmd.vlanDatSize">{1}</property>
                    </capture>
                </interaction>
            </condition>
            <condition test="(-NOT- (-EXISTS- cmd.haveVlanFile)) -AND- (-NOT- (-EXISTS- cmd.vlanDatSize))">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">dir cat4000_flash:/vlan.dat</command>
                    <response property="cmd.haveVlanFile">bytes total</response>
                    <response>%prompt%</response>
                    <capture buffer="Directory of (\S+)" ignoreFailure="true">
                        <property name="cfgFilename">{1}</property>
                    </capture>
                    <capture buffer="\s*\d+\s+\S+\s+(\d+)\s+.*vlan.dat" ignoreFailure="true">
                        <property name="cmd.vlanDatSize">{1}</property>
                    </capture>
                </interaction>
            </condition>
            <assert
                condition="(-EXISTS- cmd.haveVlanFile) -AND- (-EXISTS- cmd.vlanDatSize)"
                key="assert.vlandat.notFound" onFailure="skip"/>
            <assert condition="%cmd.vlanDatSize% -GT- 0"
                key="assert.vlandat.empty" onFailure="skip"/>
            <assert condition="-NOT- (%transferMode% -EQ- tunneled)"
                key="assert.vlandat.tftp.notSupported" onFailure="skip"/>
            <interaction>
                <prompt>%prompt%</prompt>
                <command>show vlan</command>
                <response property="cmd.retryShowVlan">Ambiguous command</response>
                <response>%prompt%</response>
                <capture>
                    <property name="decodedContents"/>
                </capture>
            </interaction>
            <condition test="-EXISTS- cmd.retryShowVlan">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>show vlans</command>
                    <response>%prompt%</response>
                    <capture>
                        <property name="decodedContents"/>
                    </capture>
                </interaction>
            </condition>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy %cfgFilename% tftp</command>
                    <response property="cmd.remote">Remote host</response>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <!-- Some versions of 12.x require a colon after tftp -->
                        <prompt>mbiguous command</prompt>
                        <command>copy %cfgFilename% tftp:</command>
                        <response property="cmd.remote">Remote host</response>
                        <response property="cmd.address">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.remote">
                    <interaction>
                        <prompt>Remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file to write</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file to write</prompt>
                        <command>%transferFilename%</command>
                        <response>Write file</response>
                    </interaction>
                    <interaction>
                        <prompt>Write file</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error retry="true">Can not open file</error>
                        <error retry="true">(Timed out)</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>estination file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>%transferFilename%</command>
                        <response>bytes copied</response>
                        <response>%prompt%</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                        <error>Error writing</error>
                        <error>Error parsing</error>
                        <error>Bad address</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy %cfgFilename% ftp://%ftpUsername%:%ftpPassword%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>estination file</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy %cfgFilename% scp://%scpUsername%@%address%</command>
                    <response>Address or name of remote host</response>
                    <error>Invalid input</error>
                </interaction>
                <interaction>
                    <prompt>Address or name of remote host</prompt>
                    <command>%address%</command>
                    <response>Destination username</response>
                    <error>Invalid host address or name</error>
                </interaction>
                <interaction>
                    <prompt>Destination username</prompt>
                    <command>%scpUsername%</command>
                    <response>estination file</response>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>%transferFilename%</command>
                    <response>assword:</response>
                    <error>Error opening</error>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword:</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <response>bytes copied</response>
                    <response>%prompt%</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error writing</error>
                    <error>Error parsing</error>
                    <error>Bad address</error>
                </interaction>
            </condition>
        </deviceCommand>
        <deviceCommand>
            <!-- restore vlan.dat -->
            <guid>5F6955F9-4D1C-4DF3-824F-2623EC6D746F</guid>
            <interaction>
                <prompt>%prompt%</prompt>
                <command stutterMilliSeconds="50">dir vlan.dat</command>
                <response property="cmd.haveVlanFile">bytes total</response>
                <response>%prompt%</response>
                <capture buffer="Directory of (\S+)" ignoreFailure="true">
                    <property name="cfgFilename">{1}</property>
                </capture>
            </interaction>
            <condition test="-NOT- (-EXISTS- cmd.haveVlanFile)">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">dir const_nvram:/vlan.dat</command>
                    <response property="cmd.haveVlanFile">bytes total</response>
                    <response>%prompt%</response>
                    <capture buffer="Directory of (\S+)" ignoreFailure="true">
                        <property name="cfgFilename">{1}</property>
                    </capture>
                </interaction>
            </condition>
            <condition test="-NOT- (-EXISTS- cmd.haveVlanFile)">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">dir cat4000_flash:/vlan.dat</command>
                    <response property="cmd.haveVlanFile">bytes total</response>
                    <response>%prompt%</response>
                    <capture buffer="Directory of (\S+)" ignoreFailure="true">
                        <property name="cfgFilename">{1}</property>
                    </capture>
                </interaction>
            </condition>
            <assert condition="-EXISTS- cmd.haveVlanFile"
                key="assert.vlandat.notFound.restore" onFailure="skip"/>
            <assert condition="-NOT- (%transferMode% -EQ- tunneled)"
                key="assert.vlandat.tunneled.transfer.notSupported" onFailure="skip"/>
            <condition test="%transferMode% -EQ- tftp">
                <assert condition="%disc.version% -GE- 10.3"
                    key="assert.tftp.notSupported.version.prior10.3" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command>copy tftp %cfgFilename%</command>
                    <response property="cmd.host">Host or network configuration file</response>
                    <response property="cmd.address">Address of remote host</response>
                    <response property="cmd.name">Address or name of remote host</response>
                    <response property="cmd.ambiguous">mbiguous command</response>
                </interaction>
                <condition test="-EXISTS- cmd.ambiguous">
                    <interaction>
                        <prompt>mbiguous command</prompt>
                        <command>copy tftp: %cfgFilename%</command>
                        <response property="cmd.host">Host or network configuration file</response>
                        <response property="cmd.address">Address of remote host</response>
                        <response property="cmd.name">Address or name of remote host</response>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.host">
                    <interaction>
                        <prompt>Host or network configuration file</prompt>
                        <command>host</command>
                        <response>Address of remote host</response>
                    </interaction>
                    <interaction>
                        <prompt>Address of remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file</prompt>
                        <command>%transferFilename%</command>
                        <response>Configure using</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Configure using</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address of remote host</prompt>
                        <command>%address%</command>
                        <response>Name of configuration file</response>
                        <error>Bad address or host name</error>
                    </interaction>
                    <interaction>
                        <prompt>Name of configuration file</prompt>
                        <command>%transferFilename%</command>
                        <response>Configure using</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Configure using</prompt>
                        <command/>
                        <response>OK</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>Failed</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.name">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <interaction>
                        <prompt>ource file</prompt>
                        <command>%transferFilename%</command>
                        <response>estination file</response>
                    </interaction>
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>estination file</prompt>
                        <command>%cfgFilename%</command>
                        <response>bytes copied</response>
                        <response property="cmd.continuePrompt">Do you still wish to proceed</response>
                        <response property="cmd.overwrite">Do you want to over write</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                    <condition test="-EXISTS- cmd.overwrite">
                        <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                            <prompt>Do you want to over write</prompt>
                            <command omitEOL="true">y</command>
                            <response>bytes copied</response>
                            <error retry="true">Device or resource busy</error>
                            <error retry="true">memory is in use</error>
                            <error>error code</error>
                            <error>Error opening</error>
                        </interaction>
                    </condition>
                </condition>
                <condition test="-EXISTS- cmd.continuePrompt">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you still wish to proceed</prompt>
                        <command>yes</command>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- ftp">
                <assert condition="%disc.version% -GE- 12.0"
                    key="assert.ftp.notSupported.version.prior12.0" onFailure="abort"/>
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command sensitive="true" sensitivePhrase="%ftpPassword%">copy ftp://%ftpUsername%:%ftpPassword%@%address% %cfgFilename%</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                </interaction>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>estination file</prompt>
                    <command>%cfgFilename%</command>
                    <response>bytes copied</response>
                    <response property="cmd.continuePrompt">Do you still wish to proceed</response>
                    <response property="cmd.overwrite">Do you want to over write</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                </interaction>
                <condition test="-EXISTS- cmd.overwrite">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you want to over write</prompt>
                        <command omitEOL="true">y</command>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
                <condition test="-EXISTS- cmd.continuePrompt">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you still wish to proceed</prompt>
                        <command>yes</command>
                        <response>bytes copied</response>
                        <error retry="true">Device or resource busy</error>
                        <error retry="true">memory is in use</error>
                        <error>error code</error>
                        <error>Error opening</error>
                    </interaction>
                </condition>
            </condition>
            <condition test="%transferMode% -EQ- scp">
                <interaction>
                    <prompt>%prompt%</prompt>
                    <command stutterMilliSeconds="50">copy scp://%scpUsername%@%address% %cfgFilename%</command>
                    <response property="cmd.address">Address or name of remote host</response>
                    <response>ource file</response>
                    <error>Invalid input</error>
                </interaction>
                <condition test="-EXISTS- cmd.address">
                    <interaction>
                        <prompt>Address or name of remote host</prompt>
                        <command>%address%</command>
                        <response property="cmd.username">Source username</response>
                        <response>ource file</response>
                        <error>Invalid host address or name</error>
                    </interaction>
                    <condition test="-EXISTS- cmd.username">
                        <interaction>
                            <prompt>Source username</prompt>
                            <command>%scpUsername%</command>
                            <response>ource file</response>
                        </interaction>
                    </condition>
                </condition>
                <interaction>
                    <prompt>ource file</prompt>
                    <command>%transferFilename%</command>
                    <response>estination file</response>
                    <error>Error opening</error>
                </interaction>
                <interaction>
                    <prompt>estination file</prompt>
                    <command>%cfgFilename%</command>
                    <response property="cmd.overwrite">Do you want to over write</response>
                    <response>assword:</response>
                    <error>Error opening</error>
                </interaction>
                <condition test="-EXISTS- cmd.overwrite">
                    <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                        <prompt>Do you want to over write</prompt>
                        <command omitEOL="true">y</command>
                        <response>assword:</response>
                        <error>Error opening</error>
                    </interaction>
                </condition>
                <interaction timeoutSeconds="%defaultResponseTimeoutSeconds% -PLUS- %maxTextTransferDurationSeconds%">
                    <prompt>assword:</prompt>
                    <command sensitive="true">%scpPassword%</command>
                    <response>bytes copied</response>
                    <error retry="true">Device or resource busy</error>
                    <error retry="true">memory is in use</error>
                    <error>error code</error>
                    <error>Error opening</error>
                    <error>Error reading</error>
                </interaction>
            </condition>
        </deviceCommand>
    </deviceType>
</deviceTypeMap>
